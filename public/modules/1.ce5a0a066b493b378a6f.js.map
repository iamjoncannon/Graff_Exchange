{"version":3,"sources":["webpack:///./app/components/DataNav.js","webpack:///./app/components/Footer.js","webpack:///./app/components/Landing.js","webpack:///./app/components/MainNav.js","webpack:///./app/components/Socket.js","webpack:///./app/components/app.js","webpack:///./app/components/indiv/IndivFin.js","webpack:///./app/components/indiv/IndivNav.js","webpack:///./app/components/indiv/IndivNews.js","webpack:///./app/components/indiv/IndivPerf.js","webpack:///./app/components/indiv/IndivSelector.js","webpack:///./app/components/indiv/IndivTrans.js","webpack:///./app/components/indiv/TradeBox.js","webpack:///./app/components/loadingDots.js","webpack:///./app/components/portfolio/AddSymbolBox.js","webpack:///./app/components/portfolio/AllNav.js","webpack:///./app/components/portfolio/AllTrans.js","webpack:///./app/components/portfolio/AllWatchlist.js","webpack:///./app/components/utils.js","webpack:///./store/Portfolio/action_constants_for_Portfolio.js","webpack:///./store/Portfolio/actions_for_Portfolio.js","webpack:///./store/Portfolio/thunks_for_Portfolio.js","webpack:///./store/User/actions_for_User.js","webpack:///./store/User/thunks_for_User.js"],"names":["DataNav","props","data","switchItem","selectedDataNavItem","map","item","i","undefined","front_end_url","back_end_url","Footer","backgroundColor","borderRadius","logoUrl","Landing","DemoAccount","setState","mode","email","password","setTimeout","handleSubmit","handleChange","evt","target","name","value","preventDefault","stopPropagation","state","firstName","lastName","re","test","local_landing_page_error","handleLogin","confirm_password","handleRegister","submitted","server_landing_page_error","handleMode","document","body","style","isDesktop","window","innerWidth","isLoggedIn","blurb","React","Component","mapStateToProps","User_state","landing_page_error","mapDispatchToProps","dispatch","registerThunk","MainNav","token","hydratePortfolio","pathname","location","Name","Number","Balance","toFixed","LogOut","includes","Object","keys","portfolio","length","Portfolio_state","balance","UserActions","Socket","connectToSocket","socket","io","myBook","stock","push","symbol","on","forEach","emit","handleSocketMessage","JSON","parse","message","portfolioSize","currentPortfolio","portfolioChanged","close","height","width","actions","App","IndivNav","IndivPerf","IndivFin","IndivNews","IndivTrans","AllNav","AllWatchlist","AllTrans","dataSwitch","newDisplay","scrollTo","hydrate_data","hydrateQuarterlyFinancialsThunk","selectedPortfolioItem","selectedPortfolioItem_object","financials","is_Loaded","no_financial_data","data_nav_items","each","date","whichFinancial","indexOf","entries","display","textAlign","closeModal","isModalShowing","whichItem","whichModal","hydrateSinglePortfolioPage","historical","handleSymbolSelect","e","textContent","sort","hydrateNewsThunk","news","is_loaded","no_news_data","newsItem","news_url","title","text","image_url","PerformanceChart","hydrateTimeSeriesDataThunk","current_holding","formatChange","input","chartPeriod","period","price","latestPrice","changePercent","IndivSelector","isSelectedSelector","selector","exit","transactionHistory","reverse","filter","quantity","date_conducted","slice","type","TradeBox","handleTrade","makeTradeThunk","size","isToolTipShowing","tooltipMessage","LoadingDots","color","fontSize","AddSymbolBox","validateSymbol","symbolHash","stockName","opacity","AllWatchList","handleEdit","hideList","LS_Key","newHidelist","localStorage","setItem","stringify","edit","storedHideList","getItem","token_error","companyName","open","change","isCell","isTab","outerWidth"],"mappings":";;;;;;;;;;;;;;;kBAEwBA,O;;AAFxB;;;;;;AAEe,SAASA,OAAT,CAAkBC,KAAlB,EAAwB;AAAA,MAE7BC,IAF6B,GAEaD,KAFb,CAE7BC,IAF6B;AAAA,MAEvBC,UAFuB,GAEaF,KAFb,CAEvBE,UAFuB;AAAA,MAEXC,mBAFW,GAEaH,KAFb,CAEXG,mBAFW;;;AAIrC,SAEE;AAAA;AAAA,MAAK,WAAU,UAAf;AACKF,SAAKG,GAAL,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAW;;AAEpB,aAEE;AAAA;AAAA;AACE,eAAKA,CADP;AAEE,mBAAS;AAAA,mBAAIJ,WAAWG,IAAX,CAAJ;AAAA,WAFX;AAGE,qBAAWF,wBAAwBE,IAAxB,GAA+B,UAA/B,GAA4CE;AAHzD;AAKEF;AALF,OAFF;AAUD,KAZA;AADL,GAFF;AAkBD,E;;;;;;;;;;;;;;;;;;ACxBD;;;;AACA;;;;AAEA,IAAMG,gBAAgB,gDAAtB;AACA,IAAMC,eAAe,oDAArB;;AAEA,IAAMC,SAAS,SAATA,MAAS,CAACV,KAAD,EAAW;;AAEtB,WAEI;AAAA;AAAA;AACQ;AAAA;AAAA,cAAG,MAAMQ,aAAT,EAAwB,QAAO,QAA/B;AACI,mDAAK,KAAI,sDAAT;AADJ,SADR;AAKQ;AAAA;AAAA,cAAG,MAAMA,aAAT,EAAwB,QAAO,QAA/B;AAEI,mDAAK,KAAI,sDAAT;AAFJ,SALR;AAUQ;AAAA;AAAA,cAAG,MAAMA,aAAT,EAAwB,QAAO,QAA/B;AAEI,mDAAK,KAAI,8GAAT,EAAwH,OAAO,EAACG,iBAAiB,OAAlB,EAA2BC,cAAc,MAAzC,EAA/H;AAFJ,SAVR;AAeQ;AAAA;AAAA,cAAG,MAAMH,YAAT,EAAuB,QAAO,QAA9B;AAEI,mDAAK,KAAKI,cAAV;AAFJ,SAfR;AAoBQ;AAAA;AAAA,cAAG,MAAMJ,YAAT,EAAuB,QAAO,QAA9B;AAEI,mDAAK,KAAK,sGAAV;AAFJ,SApBR;AAyBQ;AAAA;AAAA,cAAG,MAAMA,YAAT,EAAuB,QAAO,QAA9B;AAEI,mDAAK,KAAI,iEAAT;AAFJ,SAzBR;AA8BQ;AAAA;AAAA,cAAG,MAAMA,YAAT,EAAuB,QAAO,QAA9B;AACI,mDAAK,KAAI,yDAAT;AADJ,SA9BR;AAkCQ;AAAA;AAAA,cAAG,MAAMA,YAAT,EAAuB,QAAO,QAA9B;AAEI,mDAAK,KAAI,oDAAT,EAA8D,OAAO,EAACG,cAAc,MAAf,EAArE;AAFJ;AAlCR,KAFJ;AA2CH,CA7CD;;kBA+CeF,M;;;;;;;;;;;;;;;;;;;;ACrDf;;;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;IAEMI,O;;;AAEJ,mBAAYd,KAAZ,EAAkB;AAAA;;AAAA,kHAERA,KAFQ;;AAAA,UAwClBe,WAxCkB,GAwCJ,YAAM;;AAElB,YAAKC,QAAL,CAAc;AACRC,cAAO,SADC;AAERC,eAAQ,qBAFA;AAGRC,kBAAW;AAHH,OAAd;;AAMAC,iBAAW;AAAA,eAAI,MAAKC,YAAL,EAAJ;AAAA,OAAX,EAAoC,EAApC;AACD,KAjDiB;;AAAA,UAmDlBC,YAnDkB,GAmDH,UAACC,GAAD,EAAS;;AAEpB,YAAKP,QAAL,qBACKO,IAAIC,MAAJ,CAAWC,IADhB,EACsBF,IAAIC,MAAJ,CAAWE,KADjC;AAGH,KAxDiB;;AAAA,UA0DlBL,YA1DkB,GA0DH,UAACE,GAAD,EAAS;;AAEpB,UAAGA,GAAH,EAAO;;AAELA,YAAII,cAAJ;AACAJ,YAAIK,eAAJ;AACD;;AANmB,wBAQ2B,MAAKC,KARhC;AAAA,UAQdC,SARc,eAQdA,SARc;AAAA,UAQHC,QARG,eAQHA,QARG;AAAA,UAQOb,KARP,eAQOA,KARP;AAAA,UAQcC,QARd,eAQcA,QARd;;AAUpB;;AAEA,UAAMa,KAAK,cAAX;;AAEA,UAAG,CAACA,GAAGC,IAAH,CAAQf,KAAR,CAAJ,EAAmB;;AAEjB,cAAKF,QAAL,CAAc,EAACkB,0BAA0B,eAA3B,EAAd;AACAd,mBAAW;AAAA,iBAAK,MAAKJ,QAAL,CAAc,EAACkB,0BAA0B,IAA3B,EAAd,CAAL;AAAA,SAAX,EAAiE,IAAjE;AACA;AACD;;AAED,UAAGf,aAAa,EAAhB,EAAmB;;AAEjB,cAAKH,QAAL,CAAc,EAACkB,0BAA0B,kBAA3B,EAAd;AACAd,mBAAW;AAAA,iBAAK,MAAKJ,QAAL,CAAc,EAACkB,0BAA0B,IAA3B,EAAd,CAAL;AAAA,SAAX,EAAiE,IAAjE;AACA;AACD;;AAED,UAAG,MAAKL,KAAL,CAAWZ,IAAX,KAAoB,SAAvB,EAAiC;;AAE/B,cAAKjB,KAAL,CAAWmC,WAAX,CAAuBjB,KAAvB,EAA8BC,QAA9B;AACD;;AAED,UAAG,MAAKU,KAAL,CAAWZ,IAAX,KAAoB,SAAvB,EAAiC;;AAE/B;;AAEA,YAAGE,aAAa,MAAKU,KAAL,CAAWO,gBAA3B,EAA4C;;AAE1C,gBAAKpB,QAAL,CAAc,EAACkB,0BAA0B,wBAA3B,EAAd;AACAd,qBAAW;AAAA,mBAAK,MAAKJ,QAAL,CAAc,EAACkB,0BAA0B,IAA3B,EAAd,CAAL;AAAA,WAAX,EAAiE,IAAjE;;AAEA;AACD;;AAED,cAAKlC,KAAL,CAAWqC,cAAX,CAA0BP,SAA1B,EAAqCC,QAArC,EAA+Cb,KAA/C,EAAsDC,QAAtD;AACD;;AAED,YAAKH,QAAL,CAAc,EAACsB,WAAW,IAAZ,EAAkBC,2BAA2B,IAA7C,EAAd;AACH,KA3GiB;;AAAA,UA6GlBC,UA7GkB,GA6GL,UAACvB,IAAD,EAAU;;AAErB,YAAKD,QAAL,CAAe,EAAEC,MAAMA,IAAR,EAAcsB,2BAA2B,KAAzC,EAAgDL,0BAA0B,IAA1E,EAAf;AACD,KAhHiB;;AAId,UAAKL,KAAL,GAAa;AACTZ,YAAO,SADE;AAETa,iBAAW,EAFF;AAGTC,gBAAU,EAHD;AAITb,aAAQ,EAJC;AAKTC,gBAAW,EALF;AAMTiB,wBAAkB,EANT;AAOTE,iBAAW,KAPF;AAQTC,iCAA2B,IARlB;AASTL,gCAA0B;AATjB,KAAb;AAJc;AAejB;;;;wCAEkB;;AAEjB;AACA;;AAEAO,eAASC,IAAT,CAAcC,KAAd,CAAoBhC,eAApB,GAAsC,SAAtC;AACD;;;2CAEqB;;AAEpB8B,eAASC,IAAT,CAAcC,KAAd,CAAoBhC,eAApB,GAAsC,OAAtC;AACD;;;yCAEmB;;AAElB,UAAG,KAAKX,KAAL,CAAWuC,yBAAX,IAAwC,KAAKV,KAAL,CAAWS,SAAtD,EAAgE;;AAE9D,aAAKtB,QAAL,CAAc,EAACsB,WAAW,KAAZ;AACCC,qCAA2B;AAD5B,SAAd;AAGD;AACF;;;6BA4EQ;AAAA;;AAEP,UAAMK,YAAYC,OAAOC,UAAP,GAAoB,IAAtC;;AAFO,mBAIoC,KAAKjB,KAJzC;AAAA,UAICZ,IAJD,UAICA,IAJD;AAAA,UAIOiB,wBAJP,UAIOA,wBAJP;;AAMP;;AACA,UAAMK,4BAA4B,KAAKV,KAAL,CAAWU,yBAAX,IAAwC,KAAKvC,KAAL,CAAWuC,yBAArF;;AAEA,UAAG,KAAKvC,KAAL,CAAW+C,UAAd,EAAyB;;AAErB,eACI,8BAAC,wBAAD,IAAU,IAAG,gBAAb,GADJ;AAGH,OALD,MAMK;;AAEH,eAEE;AAAA;AAAA,YAAK,WAAYH,aAAa3B,SAAS,SAAtB,GAAkC,qBAAlC,GAA0D,SAA3E;AAEE;AAAA;AAAA,cAAK,WAAU,QAAf;AAEI;AAAA;AAAA,gBAAM,WAAU,OAAhB;AAAA;AAAA,aAFJ;AAMI;AAAA;AAAA,gBAAM,WAAU,OAAhB;AAEG+B;AAFH,aANJ;AAYI,mDAAK,KAAKnC,cAAV,GAZJ;AAcK,aAAC+B,SAAD,IAEC;AAAA;AAAA,gBAAK,WAAU,WAAf;AAEE;AAAA;AAAA;AACE,6BAAY3B,SAAS,SAAT,GAAqB,YAArB,GAAoCV,SADlD;AAEE,2BAAS;AAAA,2BAAI,OAAKiC,UAAL,CAAgB,SAAhB,CAAJ;AAAA;AAFX;AAAA;AAAA,eAFF;AASE;AAAA;AAAA;AACE,6BAAYvB,SAAS,SAAT,IAAsB,CAAC2B,SAAvB,GAAmC,YAAnC,GAAkDrC,SADhE;AAEE,2BAAS;AAAA,2BAAI,OAAKiC,UAAL,CAAgB,SAAhB,CAAJ;AAAA;AAFX;AAAA;AAAA;AATF,aAhBN;AAmCKI,yBAAa3B,SAAS,SAAtB,IAEG;AAAA;AAAA,gBAAK,WAAU,WAAf;AAEI;AAAA;AAAA;AAAA;AAAA,eAFJ;AAKI;AAAA;AAAA;AACE,2BAAS;AAAA,2BAAI,OAAKuB,UAAL,CAAgB,SAAhB,CAAJ;AAAA;AADX;AAAA;AAAA;AALJ,aArCR;AAkDII,yBAAa3B,QAAQ,SAArB,IAEA;AAAA;AAAA,gBAAK,WAAU,WAAf;AAEE;AAAA;AAAA;AAAA;AAAA,eAFF;AAIE;AAAA;AAAA;AACE,2BAAS;AAAA,2BAAI,OAAKuB,UAAL,CAAgB,SAAhB,CAAJ;AAAA;AADX;AAAA;AAAA;AAJF;AApDJ,WAFF;AAqEE;AAAA;AAAA,cAAK,WAAU,MAAf;AACA;AAAA;AAAA;AAGIvB,uBAAS,SAAT,IAEA;AAAA;AAAA;AAEE;AAAA;AAAA;AAAA;AAAA,iBAFF;AAIE;AACE,wBAAK,MADP;AAEE,wBAAK,WAFP;AAGE,yBAAO,KAAKY,KAAL,CAAWC,SAHpB;AAIE,4BAAU,KAAKR;AAJjB;AAJF,eALJ;AAoBIL,uBAAS,SAAT,IAEA;AAAA;AAAA;AAEE;AAAA;AAAA;AAAA;AAAA,iBAFF;AAIE;AACE,wBAAK,MADP;AAEE,wBAAK,UAFP;AAGE,yBAAO,KAAKY,KAAL,CAAWE,QAHpB;AAIE,4BAAU,KAAKT;AAJjB;AAJF,eAtBJ;AAoCE;AAAA;AAAA;AAEE;AAAA;AAAA;AAAA;AAAA,iBAFF;AAIE;AACE,wBAAK,OADP;AAEE,wBAAK,OAFP;AAGE,gCAHF;AAIE,yBAAO,KAAKO,KAAL,CAAWX,KAJpB;AAKE,4BAAU,KAAKI;AALjB;AAJF,eApCF;AAkDE;AAAA;AAAA;AAEE;AAAA;AAAA;AAAA;AAAA,iBAFF;AAIE;AACE,4BAAU,KAAKA,YADjB;AAEE,wBAAK,UAFP;AAGE,wBAAK,UAHP;AAIE,yBAAO,KAAKO,KAAL,CAAWV;AAJpB;AAJF,eAlDF;AAiEEF,uBAAS,SAAT,IAEA;AAAA;AAAA;AAEE;AAAA;AAAA;AAAA;AAAA,iBAFF;AAIE;AACE,4BAAU,KAAKK,YADjB;AAEE,wBAAK,UAFP;AAGE,wBAAK,kBAHP;AAIE,yBAAO,KAAKO,KAAL,CAAWO;AAJpB;AAJF,eAnEF;AAgFA;AAAA;AAAA;AACE,2BAAU,KAAKf;AADjB;AAIMJ,yBAAS,SAAT,IAAsB,CAAC,KAAKY,KAAL,CAAWS,SAAlC,GAA8C,SAA9C,GACArB,SAAS,SAAT,IAAsB,CAAC,KAAKY,KAAL,CAAWS,SAAlC,GAA8C,SAA9C,GACA,KAAKT,KAAL,CAAWS,SAAX,GAAuB,YAAvB,GAAsC;AAN5C,eAhFA;AA2FEC,2CAA6B;AAAA;AAAA,kBAAM,WAAU,eAAhB;AAAkC,qBAAKvC,KAAL,CAAWuC;AAA7C,eA3F/B;AA4FEL,0CAA4B;AAAA;AAAA,kBAAM,WAAU,eAAhB;AAAkCA;AAAlC,eA5F9B;AA6FEjB,uBAAS,SAAT,IAAsB;AAAA;AAAA,kBAAM,SAAS,KAAKF,WAApB;AAAA;AAAA;AA7FxB;AADA;AArEF,SAFF;AA0KH;AACA;;;;EAhTmBkC,gBAAMC,S;;AAmT5B,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC1C,SAAO;AACHL,gBAAaK,WAAWL,UADrB;AAEHR,+BAA4Ba,WAAWC;AAFpC,GAAP;AAID,CALD;;AAOA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;;AAEpCnB,iBAAa,qBAACjB,KAAD,EAAQC,QAAR;AAAA,aAAqBoC,SAAS,iCAAWrC,KAAX,EAAkBC,QAAlB,CAAT,CAArB;AAAA,KAFuB;AAGpCkB,oBAAgB;AAAA,aAAakB,SAASC,0DAAT,CAAb;AAAA;AAHoB,GAAb;AAAA,CAA3B;;kBAMe,yBACbL,eADa,EAEbG,kBAFa,EAGbxC,OAHa,C;;;;;;;;;;;;;;;;;;;;ACtUf;;;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;AACA;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;;IAEM2C,O;;;AAEJ,mBAAYzD,KAAZ,EAAkB;AAAA;;AAAA,6GACRA,KADQ;AAGjB;;;;wCAEkB;AAAA,mBAEmB,KAAKA,KAFxB;AAAA,UAET0D,KAFS,UAETA,KAFS;AAAA,UAEFC,gBAFE,UAEFA,gBAFE;;;AAIjBA,uBAAiBD,KAAjB;AACD;;;6BAEO;AAAA,UAEEE,QAFF,GAEe,KAAK5D,KAAL,CAAW6D,QAF1B,CAEED,QAFF;;;AAIN,aAEE;AAAA;AAAA,UAAK,WAAU,UAAf;AAEM,sCAAC,gBAAD,OAFN;AAIIhB,4BAEA;AAAA;AAAA,YAAK,WAAU,UAAf;AACI;AAAA;AAAA;AAAA;AAAA,WADJ;AAGI;AAAA;AAAA;AAAO,iBAAK5C,KAAL,CAAW8D;AAAlB,WAHJ;AAII;AAAA;AAAA;AAAA;AAAiBC,mBAAO,KAAK/D,KAAL,CAAWgE,OAAlB,EAA2BC,OAA3B,CAAmC,CAAnC;AAAjB,WAJJ;AAKI;AAAA;AAAA,cAAM,SAAS,KAAKjE,KAAL,CAAWkE,MAA1B;AAAA;AAAA;AALJ,SANJ;AAeE;AAAA;AAAA,YAAK,WAAU,aAAf;AAEE;AAAC,gCAAD;AAAA,cAAM,IAAG,gBAAT;AAEE,iDAAG,gCAA6BtB,mBAAY,GAAZ,GAAkB,GAA/C,YAAwDgB,SAASO,QAAT,CAAkB,MAAlB,IAA4B,UAA5B,GAAyC,EAAjG,CAAH,GAFF;AAIG,uCAAe;AAAA;AAAA;AAAA;AAAA;AAJlB,WAFF;AAUE,iDAAK,KAAKtD,cAAV,GAVF;AAaI;AAAC,gCAAD;AAAA,cAAM,IAAKuD,OAAOC,IAAP,CAAY,KAAKrE,KAAL,CAAWsE,SAAvB,EAAkCC,MAAlC,GAA2C,CAA3C,GAA+C,aAA/C,GAA+D,gBAA1E;AAEG,uCAAe;AAAA;AAAA;AAAA;AAAA,aAFlB;AAIE,iDAAG,qCAAkC3B,mBAAY,GAAZ,GAAkB,GAApD,YAA6DgB,SAASO,QAAT,CAAkB,QAAlB,IAA8B,UAA9B,GAA2C,EAAxG,CAAH;AAJF;AAbJ;AAfF,OAFF;AA4CD;;;;EA9DmBlB,gBAAMC,S;;AAgE3B;;AAED,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAqC;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AAAA,MAAtBoB,eAAsB,QAAtBA,eAAsB;;;AAE3D,SAAO;AACLV,UAAMV,WAAWU,IADZ;AAELE,aAASZ,WAAWqB,OAFf;AAGLf,WAAON,WAAWM,KAHb;AAILY,eAAWE,gBAAgBF;AAJtB,GAAP;AAMD,CARD;;AAUA,IAAMhB,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;AACtCY,YAAS;AAAA,aAAMX,SAASmB,2BAAYR,MAAZ,EAAT,CAAN;AAAA,KAD6B;AAEtCP,sBAAkB,0BAACD,KAAD;AAAA,aAAWH,SAAS,iDAAsBG,KAAtB,CAAT,CAAX;AAAA;AAFoB,GAAb;AAAA,CAA3B;;kBAKe,yBACbP,eADa,EAEbG,kBAFa,EAGbG,OAHa,C;;;;;;;;;;;;;;;;;;;;AChGf;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMkB,M;;;AAEJ,kBAAY3E,KAAZ,EAAmB;AAAA;;AAAA,gHACXA,KADW;;AAAA,UAQnB4E,eARmB,GAQD,YAAM;;AAEtB,UAAMC,SAASC,GAAG,wCAAH,CAAf;;AAEA,UAAMC,SAAS,EAAf;;AAEA,WAAK,IAAIC,KAAT,IAAkB,MAAKhF,KAAL,CAAWsE,SAA7B,EAAuC;;AAErCS,eAAOE,IAAP,CAAY,MAAKjF,KAAL,CAAWsE,SAAX,CAAqBU,KAArB,EAA4BE,MAAxC;AACD;;AAEDL,aAAOM,EAAP,CAAU,SAAV,EAAqB,YAAM;;AAEzBJ,eAAOK,OAAP,CAAgB,iBAAO;AACrBP,iBAAOQ,IAAP,CAAY,WAAZ,EAAyBL,KAAzB;AACD,SAFD;AAGD,OALD;;AAOAH,aAAOM,EAAP,CAAU,SAAV,EAAqB,mBAAW;;AAE9B,cAAKnF,KAAL,CAAWsF,mBAAX,CAA+BC,KAAKC,KAAL,CAAWC,OAAX,CAA/B;AACD,OAHD;;AAKA,YAAKzE,QAAL,CAAc,EAAE6D,cAAF,EAAUa,eAAetB,OAAOC,IAAP,CAAY,MAAKrE,KAAL,CAAWsE,SAAvB,EAAkCC,MAA3D,EAAd;AACD,KAhCkB;;AAGjB,UAAK1C,KAAL,GAAY,EAAZ;AAHiB;AAMlB;;;;;;;;;;;AA8BK8D,gC,GAAmBvB,OAAOC,IAAP,CAAY,KAAKrE,KAAL,CAAWsE,SAAvB,EAAkCC,M;AAErDqB,gC,GAAmBD,qBAAqB,KAAK9D,KAAL,CAAW6D,a;;qBAEnDE,gB;;;;;;uBAGI,KAAK/D,KAAL,CAAWgD,MAAX,CAAkBgB,KAAlB,E;;;;AAEN,qBAAKjB,eAAL;;;;;;;;;;;;;;;;;;wCAIe;AACjB,WAAKA,eAAL;AACD;;;6BAEQ;AACP,aACE,uCAAK,OAAO,EAACkB,QAAQ,GAAT,EAAcC,OAAO,GAArB,EAAZ,GADF;AAGD;;;;EA3DkB9C,gBAAMC,S;;AA8D3B,IAAMC,kBAAkB,SAAlBA,eAAkB,QAAyB;AAAA,MAAtBqB,eAAsB,SAAtBA,eAAsB;;AAC7C,SAAO;AACLF,eAAYE,gBAAgBF;AADvB,GAAP;AAGD,CAJH;;AAMA,IAAMhB,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;;AAEpCgC,yBAAqB,6BAACG,OAAD;AAAA,aAAWlC,SAASyC,gCAAQV,mBAAR,CAA4BG,OAA5B,CAAT,CAAX;AAAA;AAFe,GAAb;AAAA,CAA3B;;kBAKe,yBACXtC,eADW,EAEXG,kBAFW,EAGbqB,MAHa,C;;;;;;;;;;;;;;;;;;AC9Ef;;;;AACA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMsB,MAAM,SAANA,GAAM,CAACjG,KAAD,EAAW;;AAErB;;AAEA,MAAGA,MAAM6D,QAAN,CAAeD,QAAf,KAA4B,GAA/B,EAAmC;;AAEjC,WAEE;AAAA;AAAA,QAAK,WAAU,eAAf;AAEE,oCAAC,qBAAD,IAAO,WAAP,EAAa,MAAK,GAAlB,EAAsB,WAAW9C,iBAAjC,GAFF;AAGE,oCAAC,qBAAD,IAAO,WAAP,EAAa,MAAK,GAAlB,EAAsB,WAAWJ,gBAAjC;AAHF,KAFF;AAUD,GAZD,MAaI;;AAEF;AACA;;AAEA,QAAG,CAACV,MAAM+C,UAAV,EAAqB;;AAEnB,aAEE,8BAAC,wBAAD,IAAU,IAAG,GAAb,GAFF;AAID,KAND,MAOI;;AAEF;;AAEE,aAEE;AAAA;AAAA,UAAK,WAAU,eAAf;AAEE,sCAAC,qBAAD,IAAO,MAAK,GAAZ,EAAgB,WAAWU,iBAA3B,GAFF;AAIE,sCAAC,qBAAD,IAAO,MAAK,QAAZ,EAAqB,WAAWyC,kBAAhC,GAJF;AAKE,sCAAC,qBAAD,IAAO,WAAP,EAAa,MAAK,aAAlB,EAAgC,WAAWC,mBAA3C,GALF;AAME,sCAAC,qBAAD,IAAO,WAAP,EAAa,MAAK,cAAlB,EAAiC,WAAWC,kBAA5C,GANF;AAOE,sCAAC,qBAAD,IAAO,WAAP,EAAa,MAAK,aAAlB,EAAgC,WAAWC,mBAA3C,GAPF;AAQE,sCAAC,qBAAD,IAAO,WAAP,EAAa,MAAK,cAAlB,EAAiC,WAAWC,oBAA5C,GARF;AAUE,sCAAC,qBAAD,IAAO,MAAK,MAAZ,EAAmB,WAAWC,gBAA9B,GAVF;AAWE,sCAAC,qBAAD,IAAO,WAAP,EAAa,MAAK,gBAAlB,EAAmC,WAAWC,sBAA9C,GAXF;AAYE,sCAAC,qBAAD,IAAO,WAAP,EAAa,MAAK,mBAAlB,EAAsC,WAAWC,kBAAjD;AAZF,OAFF;AAkBH;AACF;AACF,CArDD;;AAuDA,IAAMtD,kBAAkB,SAAlBA,eAAkB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC1C,SAAO;AACHL,gBAAaK,WAAWL;AADrB,GAAP;AAGD,CAJD;;kBAMe,gCAAW,yBACxBI,eADwB,EAExB,IAFwB,EAGxB8C,GAHwB,CAAX,C;;;;;;;;;;;;;;;;;;;;AC/Ef;;;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA;;IAEMG,Q;;;AAEJ,oBAAYpG,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAAA,UAOnB0G,UAPmB,GAON,UAACC,UAAD,EAAgB;AAC3B9D,aAAO+D,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;;AAEA,YAAK5F,QAAL,CAAc;;AAEZb,6BAAsBwG;AAFV,OAAd;AAID,KAdkB;;AAAA,UAgBnBE,YAhBmB,GAgBJ,YAAM;AAAA,wBAE+C,MAAK7G,KAFpD;AAAA,UAEX8G,+BAFW,eAEXA,+BAFW;AAAA,UAEsBC,qBAFtB,eAEsBA,qBAFtB;;;AAInBD,sCAAgCC,qBAAhC;AACD,KArBkB;;AAEjB,UAAKlF,KAAL,GAAa;AACX1B,2BAAsB;AADX,KAAb;AAFiB;AAKlB;;;;wCAkBkB;AAAA,mBAE4B,KAAKH,KAFjC;AAAA,UAET+G,qBAFS,UAETA,qBAFS;AAAA,UAEczC,SAFd,UAEcA,SAFd;;;AAIjB,UAAM0C,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAEA,UAAG,CAAC,oBAAD,IAAa,CAACC,6BAA6BC,UAA9C,EAAyD;;AAEvD,aAAKJ,YAAL;AACD;AAEF;;;yCAEmB;AAAA,oBAE2B,KAAK7G,KAFhC;AAAA,UAEV+G,qBAFU,WAEVA,qBAFU;AAAA,UAEazC,SAFb,WAEaA,SAFb;;;AAIlB,UAAM0C,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAEA,UAAG,CAAC,oBAAD,IAAa,CAACC,6BAA6BC,UAA9C,EAAyD;;AAEvD,aAAKJ,YAAL;AACD;AAEF;;;6BAEQ;;AAEPhE,aAAO+D,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;;AAFO,oBAIqC,KAAK5G,KAJ1C;AAAA,UAIC+G,qBAJD,WAICA,qBAJD;AAAA,UAIwBzC,SAJxB,WAIwBA,SAJxB;;;AAMP,UAAM0C,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAEkB;AAClB,UAAMG,YAAYF,gCACGA,6BAA6BC,UADhC,IAEGD,6BAA6BC,UAA7B,CAAwC1C,MAF7D;;AAIA,UAAM4C,oBAAoBH,gCACGA,6BAA6BC,UADhC,IAEGD,6BAA6BC,UAA7B,CAAwC1C,MAAxC,KAAmD,CAFhF;;AAIA;AACA,UAAI6C,iBAAiB,EAArB;;AAEA,UAAGF,SAAH,EAAa;AAAA,YAEHD,UAFG,GAEYD,4BAFZ,CAEHC,UAFG;;;AAIXA,mBAAW7B,OAAX,CAAmB;AAAA,iBAAOgC,eAAenC,IAAf,CAAoBoC,KAAKC,IAAzB,CAAP;AAAA,SAAnB;AACD;;AAED;AACA;;AAEA,UAAInH,4BAAJ;;AAEA;AACA,UAAG,CAAC,KAAK0B,KAAL,CAAW1B,mBAAf,EAAmC;;AAEjCA,8BAAsBiH,eAAe,CAAf,CAAtB;AAED,OAJD,MAKI;;AAEFjH,8BAAsB,KAAK0B,KAAL,CAAW1B,mBAAjC;AACD;;AAED,UAAIoH,iBAAiBH,eAAeI,OAAf,CAAuBrH,mBAAvB,CAArB;;AAEA,aAEE;AAAA;AAAA;AAEI+G,qBAAaK,mBAAmBhH,SAAhC,GACA;AAAA;AAAA,YAAK,WAAU,2BAAf;AAEE;AAAA;AAAA;AAAOJ;AAAP,WAFF;AAKMiE,iBAAOqD,OAAP,CAAeT,6BAA6BC,UAA7B,CAAwCM,cAAxC,CAAf,EACCnH,GADD,CACM,UAACC,IAAD,EAAOC,CAAP,EAAY;;AAEhB,mBAEE;AAAA;AAAA,gBAAK,KAAKA,CAAV;AACI;AAAA;AAAA;AACGD,qBAAK,CAAL;AADH,eADJ;AAKI;AAAA;AAAA;AACGA,qBAAK,CAAL;AADH;AALJ,aAFF;AAYD,WAfD;AALN,SADA,GAyBI8G,oBACF;AAAA;AAAA,YAAM,WAAW,eAAjB;AAAA;AAAA,SADE,GAKF;AAAA;AAAA,YAAK,OAAO,EAACO,SAAS,OAAV,EAAmBC,WAAW,QAA9B,EAAZ;AACI,wCAAC,qBAAD,IAAa,MAAM,MAAnB;AADJ,SAhCN;AAqCE,sCAAC,iBAAD;AACE,gBAAMP,cADR;AAEE,+BAAqBjH,mBAFvB;AAGE,sBAAY,KAAKuG;AAHnB;AArCF,OAFF;AAgDD;;;;EAhJoBzD,gBAAMC,S;;AAmJ7B,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAyB;AAAA,MAAtBqB,eAAsB,QAAtBA,eAAsB;;AAC/C,SAAO;AACLF,eAAWE,gBAAgBF,SADtB;AAELyC,2BAAuBvC,gBAAgBuC;AAFlC,GAAP;AAID,CALD;;AAOA,IAAMzD,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;;AAEtCwD,qCAAiC,yCAAC5B,MAAD;AAAA,aAAY3B,SAAS,2DAAgC2B,MAAhC,CAAT,CAAZ;AAAA;AAFK,GAAb;AAAA,CAA3B;;kBAKe,yBACb/B,eADa,EAEbG,kBAFa,EAGb8C,QAHa,C;;;;;;;;;;;;;;;;;;;;ACxKf;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;AAEA;AACA;AACA;AACA;;IAEMF,Q;;;AAEJ,oBAAYlG,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAAA,UA0CnB4H,UA1CmB,GA0CN,YAAM;;AAEjB,YAAK5G,QAAL,CAAc,EAAE6G,gBAAiB,KAAnB,EAAd;AACD,KA7CkB;;AAGjB,UAAKhG,KAAL,GAAa;AACTiG,iBAAW,IADF;AAETD,sBAAiB,KAFR;AAGTE,kBAAa;AAHJ,KAAb;AAHiB;AAQlB;;;;mCAEa;AAAA,UAEJhB,qBAFI,GAEsB,KAAK/G,KAF3B,CAEJ+G,qBAFI;;;AAIZ,WAAK/G,KAAL,CAAWgI,0BAAX,CAAuCjB,qBAAvC;AACD;;;wCAEkB;AAAA,mBAE4B,KAAK/G,KAFjC;AAAA,UAET+G,qBAFS,UAETA,qBAFS;AAAA,UAEczC,SAFd,UAEcA,SAFd;;;AAIjB,UAAM0C,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAEA,UAAI,wBAAY,CAACC,6BAA6BiB,UAA9C,EAAyD;;AAEvD,aAAKpB,YAAL;AACD;AACF;;;yCAEmB;AAAA,oBAE2B,KAAK7G,KAFhC;AAAA,UAEV+G,qBAFU,WAEVA,qBAFU;AAAA,UAEazC,SAFb,WAEaA,SAFb;;;AAIlB,UAAM0C,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAEA,UAAG,wBAAY,CAACC,6BAA6BiB,UAA7C,EAAwD;;AAEtD,aAAKpB,YAAL;AACD;AAEF;;;6BAOQ;AAAA;;AAAA,mBAEgC,KAAKhF,KAFrC;AAAA,UAECgG,cAFD,UAECA,cAFD;AAAA,UAEiBE,UAFjB,UAEiBA,UAFjB;AAAA,UAGCnE,QAHD,GAGc,KAAK5D,KAAL,CAAW6D,QAHzB,CAGCD,QAHD;AAAA,oBAI0D,KAAK5D,KAJ/D;AAAA,UAIC+G,qBAJD,WAICA,qBAJD;AAAA,UAIwBzC,SAJxB,WAIwBA,SAJxB;AAAA,UAImC4D,kBAJnC,WAImCA,kBAJnC;;;AAMP,UAAMlB,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAEA,aAEE;AAAA;AAAA;AAEA;AAAA;AAAA,YAAK,WAAU,gBAAf;AAEI,iCAEA,qCAAG,WAAU,mBAAb;AACG,qBAAS;AAAA,qBAAI,OAAK/F,QAAL,CAAc,EAAC6G,gBAAgB,IAAjB,EAAuBE,YAAY,eAAnC,EAAd,CAAJ;AAAA;AADZ,YAFA,GAQA,uCAAK,OAAQ,EAAEhC,OAAO,0BAAa,OAAb,GAAuB,KAAhC,EAAb,GAVJ;AAgBE;AAAA;AAAA;AACE,uBAAS;AAAA,uBAAI,OAAK/E,QAAL,CAAc,EAAC6G,gBAAgB,IAAjB,EAAuBE,YAAY,iBAAnC,EAAd,CAAJ;AAAA;AADX;AAIE;AAAA;AAAA;AAAOf,8CAAgCA,6BAA6B9B;AAApE,aAJF;AAMI,iDAAG,WAAU,yBAAb;AANJ,WAhBF;AA0BE;AAAA;AAAA;AACE,uBAAS;AAAA,uBAAI,OAAKlE,QAAL,CAAc,EAAC6G,gBAAgB,IAAjB,EAAuBE,YAAY,WAAnC,EAAd,CAAJ;AAAA;AADX;AAAA;AAAA;AA1BF,SAFA;AAoCE,SAAC,oBAAD,IAEA;AAAA;AAAA,YAAK,WAAU,eAAf;AAEE,wCAAC,uBAAD;AACE,sBAAUnE,QADZ;AAEE,kBAAM,gBAAI,CAAE;AAFd;AAFF,SAtCF;AAkDEiE,0BAEA;AAAA;AAAA,YAAK,WAAU,iBAAf,EAAiC,SAAS;AAAA,qBAAI,OAAK7G,QAAL,CAAc,EAAC6G,gBAAgB,KAAjB,EAAd,CAAJ;AAAA,aAA1C;AAEE;AAAA;AAAA,cAAK,SAAU,iBAACM,CAAD;AAAA,uBAAMA,EAAEvG,eAAF,EAAN;AAAA,eAAf,EAA2C,WAAWmG,UAAtD;AAEMA,2BAAe,eAAf,IAEA,8BAAC,uBAAD;AACE,wBAAUnE,QADZ;AAEE,oBAAM,KAAKgE;AAFb,cAJN;AAUMG,2BAAe,WAAf,IAEA,8BAAC,kBAAD;AACE,oBAAM,KAAKH;AADb,cAZN;AAkBMG,2BAAe,iBAAf,IAAoCzD,SAApC,IAEE;AAAA;AAAA,gBAAK,SAAS,iBAAC6D,CAAD,EAAM;AAChBD,qCAAmBC,EAAE3G,MAAF,CAAS4G,WAA5B;AACA,yBAAKpH,QAAL,CAAc,EAAC6G,gBAAgB,KAAjB,EAAd;AACD,iBAHH;AAKGzD,qBAAOqD,OAAP,CAAenD,SAAf,EACI+D,IADJ,GAEIjI,GAFJ,CAEQ,UAACC,IAAD,EAAOC,CAAP,EAAY;;AAEjB,uBACE;AAAA;AAAA,oBAAM,KAAKA,CAAX;AAAeD,uBAAK,CAAL;AAAf,iBADF;AAGH,eAPA;AALH;AApBR;AAFF;AApDF,OAFF;AAgGD;;;;EAzJoB4C,gBAAMC,S;;AA4J7B,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAqC;AAAA,MAAlCqB,eAAkC,QAAlCA,eAAkC;AAAA,MAAjBpB,UAAiB,QAAjBA,UAAiB;;AAC3D,SAAO;AACLM,WAAON,WAAWM,KADb;AAELqD,2BAAuBvC,gBAAgBuC,qBAFlC;AAGLzC,eAAWE,gBAAgBF;AAHtB,GAAP;AAKD,CAND;;AAQA,IAAMhB,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;AACtC0E,gCAA4B;AAAA,aAAazE,SAASyE,4EAAT,CAAb;AAAA,KADU;AAEtCE,wBAAoB,4BAAChD,MAAD;AAAA,aAAY3B,SAASyC,gCAAQkC,kBAAR,CAA2BhD,MAA3B,CAAT,CAAZ;AAAA;AAFkB,GAAb;AAAA,CAA3B;;kBAKe,yBACb/B,eADa,EAEbG,kBAFa,EAGb4C,QAHa,C;;;;;;;;;;;;;;;;;;;;ACvLf;;;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;IAEMG,S;;;AAEJ,qBAAYrG,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAAA,UAKnB6G,YALmB,GAKJ,YAAM;AAAA,wBAEiC,MAAK7G,KAFtC;AAAA,UAEXsI,gBAFW,eAEXA,gBAFW;AAAA,UAEOvB,qBAFP,eAEOA,qBAFP;;;AAInBuB,uBAAiBvB,qBAAjB;AACD,KAVkB;;AAAA;AAGlB;;;;wCASkB;AAAA,mBAE4B,KAAK/G,KAFjC;AAAA,UAET+G,qBAFS,UAETA,qBAFS;AAAA,UAEczC,SAFd,UAEcA,SAFd;;;AAIjB,UAAM0C,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAEA,UAAG,CAAC,oBAAD,IAAa,CAACC,6BAA6BuB,IAA9C,EAAmD;;AAEjD,aAAK1B,YAAL;AACD;AAEF;;;yCAEmB;AAAA,oBAE2B,KAAK7G,KAFhC;AAAA,UAEV+G,qBAFU,WAEVA,qBAFU;AAAA,UAEazC,SAFb,WAEaA,SAFb;;;AAIlB,UAAM0C,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAEA,UAAG,CAAC,oBAAD,IAAa,CAACC,6BAA6BuB,IAA9C,EAAmD;;AAEjD,aAAK1B,YAAL;AACD;AAEF;;;6BAEO;AAAA,oBAEuC,KAAK7G,KAF5C;AAAA,UAEE+G,qBAFF,WAEEA,qBAFF;AAAA,UAEyBzC,SAFzB,WAEyBA,SAFzB;;;AAIN,UAAM0C,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAEA,UAAMyB,YAAYxB,gCACGA,6BAA6BuB,IADhC,IAEGvB,6BAA6BuB,IAA7B,CAAkChE,MAFvD;;AAIA,UAAMkE,eAAezB,gCACEA,6BAA6BuB,IAD/B,IAEEvB,6BAA6BuB,IAA7B,CAAkChE,MAAlC,KAA6C,CAFpE;;AAIA,aAEE;AAAA;AAAA,UAAK,WAAU,iBAAf;AAEIiE,oBAAYxB,6BAA6BuB,IAA7B,CAAkCnI,GAAlC,CAAsC,UAACsI,QAAD,EAAWpI,CAAX,EAAgB;;AAEhE,iBACI;AAAA;AAAA,cAAK,WAAU,UAAf,EAA0B,KAAKA,CAA/B;AAEI;AAAA;AAAA;AAEI;AAAA;AAAA;AACI;AAAA;AAAA,oBAAG,MAAMoI,SAASC,QAAlB,EAA4B,QAAO,QAAnC;AACCD,2BAASE;AADV;AADJ,eAFJ;AAQI;AAAA;AAAA;AACKF,yBAASpB;AADd,eARJ;AAYI;AAAA;AAAA;AACKoB,yBAASG;AADd;AAZJ,aAFJ;AAoBI;AACI,mBAAKH,SAASI;AADlB;AApBJ,WADJ;AA0BH,SA5Ba,CAAZ,GA6BAL,eACE;AAAA;AAAA,YAAM,WAAW,eAAjB;AAAA;AAAA,SADF,GAMF;AAAA;AAAA,YAAK,OAAO,EAACf,SAAS,OAAV,EAAmBC,WAAW,QAA9B,EAAZ;AACE,wCAAC,qBAAD,IAAa,MAAM,MAAnB;AADF;AArCF,OAFF;AA8CD;;;;EApGqB1E,gBAAMC,S;;AAuG9B,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAyB;AAAA,MAAtBqB,eAAsB,QAAtBA,eAAsB;;AAC7C,SAAO;AACLF,eAAWE,gBAAgBF,SADtB;AAELyC,2BAAuBvC,gBAAgBuC;AAFlC,GAAP;AAID,CALH;;AAOA,IAAMzD,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;;AAEtCgF,sBAAkB,0BAACpD,MAAD;AAAA,aAAY3B,SAAS,4CAAiB2B,MAAjB,CAAT,CAAZ;AAAA;AAFoB,GAAb;AAAA,CAA3B;;kBAKe,yBACb/B,eADa,EAEbG,kBAFa,EAGb+C,SAHa,C;;;;;;;;;;;;;;;;;;;;ACzHf;;;;AACA;;AACA;;;;AACA;;AACA;;;;;;;;;;AAEA,IAAM0C,mBAAmB,iBAAK;AAAA,SAAM,kMAAN;AAAA,CAAL,CAAzB;;IAEM5C,S;;;AAEJ,qBAAYnG,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAAA,UAyCnB6G,YAzCmB,GAyCJ,YAAM;AAAA,wBAE0C,MAAK7G,KAF/C;AAAA,UAEXgJ,0BAFW,eAEXA,0BAFW;AAAA,UAEiBjC,qBAFjB,eAEiBA,qBAFjB;;;AAInBiC,iCAA2BjC,qBAA3B;AACD,KA9CkB;;AAAA,UAgDnBL,UAhDmB,GAgDN,UAACC,UAAD,EAAgB;;AAE3B,YAAK3F,QAAL,CAAc;;AAEZb,6BAAsBwG;AAFV,OAAd;AAID,KAtDkB;;AAEjB,UAAK9E,KAAL,GAAa;;AAEX1B,2BAAsB,MAFX;AAGX8I,uBAAiB;AAHN,KAAb;AAFiB;AAOlB;;AAED;AACA;;;;wCAEmB;AAAA,mBAE4B,KAAKjJ,KAFjC;AAAA,UAET+G,qBAFS,UAETA,qBAFS;AAAA,UAEczC,SAFd,UAEcA,SAFd;;;AAIjB,UAAM0C,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAEA,UAAG,CAAC,oBAAD,IAAa,CAACC,6BAA6BiB,UAA9C,EAAyD;;AAEvD,aAAKpB,YAAL;AACD;AAEF;;AAED;AACA;AACA;;;;yCAEoB;AAAA,oBAE2B,KAAK7G,KAFhC;AAAA,UAEV+G,qBAFU,WAEVA,qBAFU;AAAA,UAEazC,SAFb,WAEaA,SAFb;;;AAIlB,UAAM0C,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAEA,UAAG,CAAC,oBAAD,IAAa,CAACC,6BAA6BiB,UAA9C,EAAyD;;AAEvD,aAAKpB,YAAL;AACD;AACF;;;6BAiBQ;AAAA,UAEC1G,mBAFD,GAEyB,KAAK0B,KAF9B,CAEC1B,mBAFD;AAAA,oBAIsC,KAAKH,KAJ3C;AAAA,UAIC+G,qBAJD,WAICA,qBAJD;AAAA,UAIwBzC,SAJxB,WAIwBA,SAJxB;;;AAMP,UAAM0C,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AANO,UAQDkC,eARC,GAQmBjC,4BARnB,CAQDiC,eARC;;;AAUP,eAASC,YAAT,CAAsBC,KAAtB,EAA4B;;AAE1B,eAAO,CAACA,QAAQ,GAAT,EAAclF,OAAd,CAAsB,CAAtB,CAAP;AACD;;AAED,eAASmF,WAAT,CAAqBC,MAArB,EAA4B;;AAE1B,gBAAOA,MAAP;;AAEE,eAAK,MAAL;AACE,mBAAO,CAAP;AACF,eAAK,OAAL;AACE,mBAAO,EAAP;AACF,eAAK,MAAL;AACE,mBAAO,GAAP;AAPJ;AASD;;AAED,aAEE;AAAA;AAAA,UAAK,WAAU,YAAf;AAEE;AAAA;AAAA,YAAK,WAAU,YAAf;AAEE;AAAA;AAAA;AAAA;AACKrC,4CAAgCA,6BAA6BsC,KAA7D,GAECtC,6BAA6BsC,KAF9B,GAICtC,6BAA6B/G,IAA7B,CAAkCsJ;AALxC,WAFF;AAWE;AAAA;AAAA;AAEGvC,4CAAgCA,6BAA6B/G,IAA7D,IAAqEiJ,aAAalC,6BAA6B/G,IAA7B,CAAkCuJ,aAA/C,CAFxE;AAAA;AAAA;AAXF,SAFF;AAqBExC,wCAAgCA,6BAA6BsC,KAA7D,IAEE;AAAA;AAAA,YAAK,WAAU,kBAAf;AAES,WAAC,CAAC,UAAD,OAAgBL,eAAhB,CAAD,EACC,CAAC,OAAD,QAAe,CAACA,kBAAkBjC,6BAA6BsC,KAAhD,EAAuDrF,OAAvD,CAA+D,CAA/D,CAAf,CADD,EACsF7D,GADtF,CAC2F,UAACC,IAAD,EAAOC,CAAP,EAAW;;AAErG,mBAEE;AAAA;AAAA,gBAAK,KAAKA,CAAV;AACE;AAAA;AAAA;AACGD,qBAAK,CAAL;AADH,eADF;AAIE;AAAA;AAAA;AACGA,qBAAK,CAAL;AADH;AAJF,aAFF;AAWD,WAdA;AAFT,SAvBJ;AA4CE;AAAA;AAAA,YAAK,WAAU,iBAAf;AAEE;AAAA;AAAA;AAEGF;AAFH,WAFF;AAOE;AAAC,2BAAD;AAAA,cAAU,UAAS,YAAnB;AACE,0CAAC,gBAAD,IAAkB,QAAQiJ,YAAYjJ,mBAAZ,CAA1B;AADF;AAPF,SA5CF;AAwDE,sCAAC,iBAAD;AACE,gBAAM,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CADR;AAEE,+BAAqBA,mBAFvB;AAGE,sBAAY,KAAKuG;AAHnB;AAxDF,OAFF;AAmED;;;;EAzJqBzD,gBAAMC,S;;AA4J9B,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAyB;AAAA,MAAtBqB,eAAsB,QAAtBA,eAAsB;;AAC/C,SAAO;AACLuC,2BAAuBvC,gBAAgBuC,qBADlC;AAELzC,eAAWE,gBAAgBF;AAFtB,GAAP;AAID,CALD;;AAOA,IAAMhB,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;;AAEtC0F,gCAA4B,oCAAC9D,MAAD;AAAA,aAAY3B,SAAS,sDAA2B2B,MAA3B,CAAT,CAAZ;AAAA;AAFU,GAAb;AAAA,CAA3B;;kBAKe,yBACb/B,eADa,EAEbG,kBAFa,EAGb6C,SAHa,C;;;;;;;;;;;;;;;;;kBC7KSsD,a;;AAHxB;;;;AACA;;;;AAEe,SAASA,aAAT,CAAwBzJ,KAAxB,EAA8B;AAAA,MAEnC4D,QAFmC,GAEtB5D,KAFsB,CAEnC4D,QAFmC;;;AAI3C,WAAS8F,kBAAT,CAA4BC,QAA5B,EAAqC;;AAEnC,WAAO/F,SAASO,QAAT,CAAkBwF,QAAlB,IAA8B,UAA9B,GAA2CpJ,SAAlD;AACD;;AAED,SAEE;AAAA;AAAA,MAAK,SAASP,MAAM4J,IAApB;AAEE;AAAC,0BAAD;AAAA,QAAM,IAAG,aAAT;AAEE;AAAA;AAAA,UAAM,WAAWF,mBAAmB,MAAnB,CAAjB;AAAA;AAAA;AAFF,KAFF;AAUE;AAAC,0BAAD;AAAA,QAAM,IAAG,cAAT;AAEE;AAAA;AAAA,UAAM,WAAWA,mBAAmB,OAAnB,CAAjB;AAAA;AAAA;AAFF,KAVF;AAkBE;AAAC,0BAAD;AAAA,QAAM,IAAG,aAAT;AAEE;AAAA;AAAA,UAAM,WAAWA,mBAAmB,MAAnB,CAAjB;AAAA;AAAA;AAFF,KAlBF;AA0BE;AAAC,0BAAD;AAAA,QAAM,IAAG,cAAT;AAEE;AAAA;AAAA,UAAM,WAAWA,mBAAmB,OAAnB,CAAjB;AAAA;AAAA;AAFF;AA1BF,GAFF;AAsCD,E;;;;;;;;;;;;;;;;;;;;AClDD;;;;AACA;;;;;;;;;;IAEMpD,U;;;AAEJ,sBAAYtG,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAEjB,UAAK6B,KAAL,GAAa,EAAb;AAFiB;AAKlB;;;;6BAEQ;AAAA,mBAE+C,KAAK7B,KAFpD;AAAA,UAEC6J,kBAFD,UAECA,kBAFD;AAAA,UAEqB9C,qBAFrB,UAEqBA,qBAFrB;;;AAIP,aACE;AAAA;AAAA,UAAK,WAAU,6BAAf;AAEE;AAAA;AAAA;AAEE;AAAA;AAAA;AAAA;AAAA,WAFF;AAGE;AAAA;AAAA;AAAA;AAAA,WAHF;AAIE;AAAA;AAAA;AAAA;AAAA,WAJF;AAKE;AAAA;AAAA;AAAA;AAAA;AALF,SAFF;AAWE;AAAA;AAAA;AAEI8C,gCACAzF,OAAOqD,OAAP,CAAeoC,kBAAf,EACGC,OADH,GAEGC,MAFH,CAEU,gBAAO;;AAEb,mBAAO1J,KAAK,CAAL,EAAQ6E,MAAR,KAAmB6B,qBAAnB,IAA4C1G,KAAK,CAAL,EAAQ2J,QAAR,GAAmB,CAAtE;AACD,WALH,EAMG5J,GANH,CAMO,UAACC,IAAD,EAAOC,CAAP,EAAW;;AAEd,gBAAIgH,OAAOjH,KAAK,CAAL,EAAQ4J,cAAnB;AACA3C,mBAAOA,KAAK4C,KAAL,CAAW,CAAX,EAAa5C,KAAKE,OAAL,CAAa,GAAb,IAAkB,CAA/B,CAAP;;AAEA,mBAEE;AAAA;AAAA,gBAAK,KAAKlH,CAAV;AACE;AAAA;AAAA;AAAOD,qBAAK,CAAL,EAAQ8J;AAAf,eADF;AAEE;AAAA;AAAA;AAAO9J,qBAAK,CAAL,EAAQ2J;AAAf,eAFF;AAGE;AAAA;AAAA;AAAA;AAAQ3J,qBAAK,CAAL,EAAQiJ;AAAhB,eAHF;AAIE;AAAA;AAAA;AAAOhC;AAAP;AAJF,aAFF;AASH,WApBD;AAHJ;AAXF,OADF;AAwCD;;;;EArDsBrE,gBAAMC,S;;AAyD/B,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAyB;AAAA,MAAtBqB,eAAsB,QAAtBA,eAAsB;;;AAE/C,SAAO;AACLqF,wBAAqBrF,gBAAgBqF,kBADhC;AAEL9C,2BAAuBvC,gBAAgBuC;AAFlC,GAAP;AAID,CAND;;kBAQe,yBACb5D,eADa,EAEb,IAFa,EAGbmD,UAHa,C;;;;;;;;;;;;;;;;;;;;ACpEf;;;;AACA;;AACA;;;;;;;;;;IAEM8D,Q;;;AAEJ,oBAAYpK,KAAZ,EAAkB;AAAA;;AAAA,oHACRA,KADQ;;AAAA,UAUlBqK,WAVkB,GAUJ,UAACF,IAAD,EAAS;AAAA,wBAKC,MAAKnK,KALN;AAAA,UAEXsE,SAFW,eAEXA,SAFW;AAAA,UAGXyC,qBAHW,eAGXA,qBAHW;AAAA,UAIXuD,cAJW,eAIXA,cAJW;AAAA,UAKX7F,OALW,eAKXA,OALW;;;AAOnB,UAAMuC,+BAA+B1C,UAAUyC,qBAAV,CAArC;;AAPmB,UASXiD,QATW,GASiBhD,4BATjB,CASXgD,QATW;AAAA,UASDV,KATC,GASiBtC,4BATjB,CASDsC,KATC;AAAA,UASMpE,MATN,GASiB8B,4BATjB,CASM9B,MATN;;AAWnB;;AAEA,UAAGiF,SAAS,MAAT,IAAoB,MAAKtI,KAAL,CAAW0I,IAAX,GAAkBP,QAAzC,EAAqD;;AAEjD,cAAKhJ,QAAL,CAAc;AACVwJ,4BAAkB,IADR;AAEVC,0BAAgB;AAFN,SAAd;;AAKArJ,mBAAW,YAAI;AACX,gBAAKJ,QAAL,CAAc,EAACwJ,kBAAkB,KAAnB,EAAd;AACH,SAFD,EAEG,IAFH;;AAIA;AACH,OAZD,MAaK,IAAGL,SAAS,KAAT,IAAqB,MAAKtI,KAAL,CAAW0I,IAAX,GAAkBjB,KAAnB,GAA4B7E,OAAnD,EAA6D;;AAE9D,cAAKzD,QAAL,CAAc;AACVwJ,4BAAkB,IADR;AAEVC,0BAAgB;AAFN,SAAd;;AAKArJ,mBAAW,YAAI;AACX,gBAAKJ,QAAL,CAAc,EAACwJ,kBAAkB,KAAnB,EAAd;AACH,SAFD,EAEG,IAFH;;AAIA;AACH,OAZI,MAaD;;AAEAF,uBAAepF,MAAf,EAAuB,MAAKrD,KAAL,CAAW0I,IAAlC,EAAwCJ,IAAxC,EAA8Cb,KAA9C;AACA,cAAKtI,QAAL,CAAc,EAACuJ,MAAM,CAAP,EAAd;AACA,cAAKvK,KAAL,CAAW4J,IAAX;AACA;AACH;AACJ,KAxDiB;;AAGd,UAAK/H,KAAL,GAAa;AACT0I,YAAM,CADG;AAETC,wBAAkB,KAFT;AAGTC,sBAAgB;AAHP,KAAb;AAHc;AAQjB;;;;6BAkDO;AAAA;;AAEN,aAEE;AAAA;AAAA;AAEM;AAAA;AAAA;AAAA;AAAA,SAFN;AAMM;AACE,gBAAK,QADP;AAEE,eAAI,GAFN;AAGE,eAAI,GAHN;AAIE,oBAAU,kBAACtC,CAAD;AAAA,mBAAK,OAAKnH,QAAL,CAAc,EAACuJ,MAAMpC,EAAE3G,MAAF,CAASE,KAAhB,EAAd,CAAL;AAAA;AAJZ,UANN;AAYM;AAAA;AAAA;AAEE;AAAA;AAAA,cAAQ,SAAS;AAAA,uBAAK,OAAK2I,WAAL,CAAiB,KAAjB,CAAL;AAAA,eAAjB;AAAA;AAAA,WAFF;AAME;AAAA;AAAA,cAAQ,SAAS;AAAA,uBAAK,OAAKA,WAAL,CAAiB,MAAjB,CAAL;AAAA,eAAjB;AAAA;AAAA;AANF,SAZN;AAwBQ,aAAKxI,KAAL,CAAW2I,gBAAX,IAA+B;AAAA;AAAA;AAAO,eAAK3I,KAAL,CAAW4I;AAAlB;AAxBvC,OAFF;AA8BD;;;;EA5FoBxH,gBAAMC,S;;AA6F5B;;AAED,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAqC;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AAAA,MAAtBoB,eAAsB,QAAtBA,eAAsB;;AAC3D,SAAO;AACLd,WAAON,WAAWM,KADb;AAELY,eAAWE,gBAAgBF,SAFtB;AAGLyC,2BAAwBvC,gBAAgBuC,qBAHnC;AAILtC,aAASrB,WAAWY;AAJf,GAAP;AAMD,CAPD;;AASA,IAAMV,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;AACtCgH,oBAAgB;AAAA,aAAa/G,SAAS+G,gEAAT,CAAb;AAAA;AADsB,GAAb;AAAA,CAA3B;;kBAIe,yBACbnH,eADa,EAEbG,kBAFa,EAGb8G,QAHa,C;;;;;;;;;;;;;;;;;;AChHf;;;;;;AAEA,IAAMM,cAAc,SAAdA,WAAc,CAAC1K,KAAD,EAAW;;AAE3B,QAAM2C,QAAQ;AACV+E,iBAAS,QADC;AAEViD,eAAO,OAFG;AAGVC,kBAAU5K,MAAMuK;AAHN,KAAd;;AAMA,WAEI;AAAA;AAAA,UAAK,WAAW,cAAhB;AACI;AAAA;AAAA,cAAM,OAAO5H,KAAb;AAAA;AAAA,SADJ;AAEI;AAAA;AAAA,cAAM,OAAOA,KAAb;AAAA;AAAA,SAFJ;AAGI;AAAA;AAAA,cAAM,OAAOA,KAAb;AAAA;AAAA;AAHJ,KAFJ;AAQH,CAhBD;;kBAkBe+H,W;;;;;;;;;;;;;;;;;;;;ACpBf;;;;AACA;;AACA;;;;AACA;;;;;;;;;;IAEMG,Y;;;AAEA,wBAAY7K,KAAZ,EAAkB;AAAA;;AAAA,4HACRA,KADQ;;AAAA,UAShB8K,cATgB,GASC,UAACjC,IAAD,EAAU;;AAEzB,aAAO,CAAC,CAACkC,qBAAWlC,IAAX,CAAT;AACD,KAZe;;AAAA,UAchBvH,YAdgB,GAcD,UAAC6G,CAAD,EAAM;;AAEnB,UAAIU,OAAOV,EAAE3G,MAAF,CAASE,KAApB;;AAEA,YAAKV,QAAL,CAAc,EAACmI,OAAON,IAAR,EAAd;;AAEA,UAAG,MAAKiC,cAAL,CAAoBjC,IAApB,CAAH,EAA6B;;AAE3B,cAAK7H,QAAL,CAAc;AACVgK,qBAAWD,qBAAWlC,IAAX;AADD,SAAd;AAGD,OALD,MAMI;;AAEF,cAAK7H,QAAL,CAAc;;AAEZgK,qBAAW;AAFC,SAAd;AAID;AACF,KAjCe;;AAAA,UAmChB3J,YAnCgB,GAmCD,YAAM;AAAA,wBAEQ,MAAKQ,KAFb;AAAA,UAEZmJ,SAFY,eAEZA,SAFY;AAAA,UAED7B,KAFC,eAEDA,KAFC;AAAA,wBAIY,MAAKnJ,KAJjB;AAAA,UAIZsK,cAJY,eAIZA,cAJY;AAAA,UAIIV,IAJJ,eAIIA,IAJJ;;;AAMnB,UAAGoB,aAAa,CAAC,MAAKhL,KAAL,CAAWsE,SAAX,CAAqB6E,KAArB,CAAjB,EAA6C;;AAE3CmB,uBAAgBnB,KAAhB,EAAuB,CAAvB,EAA0B,KAA1B,EAAiC,CAAjC,EAAoC,IAApC;AACD;;AAEDS;AACD,KA/Ce;;AAGd,UAAK/H,KAAL,GAAa;AACXmJ,iBAAW,IADA;AAEX7B,aAAO;AAFI,KAAb;AAHc;AAOf;;;;6BA0CO;AAAA,mBAEqB,KAAKtH,KAF1B;AAAA,UAECmJ,SAFD,UAECA,SAFD;AAAA,UAEY7B,KAFZ,UAEYA,KAFZ;;;AAIN,aAEE;AAAA;AAAA,UAAK,WAAU,sBAAf,EAAsC,IAAG,gBAAzC;AAEE;AAAA;AAAA;AAAA;AAAA,SAFF;AAME;AACE,gBAAK,MADP;AAEE,eAAI,GAFN;AAGE,eAAI,GAHN;AAIE,oBAAU,KAAK7H;AAJjB,UANF;AAYE;AAAA;AAAA;AAEE;AAAA;AAAA;AACE,uBAAS,KAAKD,YADhB;AAEE,qBAAO,EAAC4J,SAASD,aAAa,CAAC,KAAKhL,KAAL,CAAWsE,SAAX,CAAqB6E,KAArB,CAAd,GAA4C,GAA5C,GAAkD,IAA5D;AAFT;AAAA;AAAA;AAFF,SAZF;AAwBI;AAAA;AAAA;AACG,eAAKtH,KAAL,CAAWmJ,SAAX,GAAuBA,SAAvB,GAAmC;AADtC;AAxBJ,OAFF;AAgCD;;;;EAvFkB/H,gBAAMC,S;;AAwFhC;;AAED,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAqC;AAAA,MAAlCqB,eAAkC,QAAlCA,eAAkC;AAAA,MAAjBpB,UAAiB,QAAjBA,UAAiB;;AAC3D,SAAO;AACLM,WAAON,WAAWM,KADb;AAELY,eAAWE,gBAAgBF;AAFtB,GAAP;AAID,CALD;;AAOA,IAAMhB,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;;AAEtCgH,oBAAgB;AAAA,aAAa/G,SAAS+G,gEAAT,CAAb;AAAA;AAFsB,GAAb;AAAA,CAA3B;;kBAKe,yBACbnH,eADa,EAEbG,kBAFa,EAGbuH,YAHa,C;;;;;;;;;;;;;;;;;;;;AC3Gf;;;;AACA;;;;;;;;;;IAEqBtE,M;;;AAEnB,kBAAYvG,KAAZ,EAAmB;AAAA;;AAAA,2GACXA,KADW;AAGlB;;;;6BAEQ;AAAA,UAEC4D,QAFD,GAEc,KAAK5D,KAAL,CAAW6D,QAFzB,CAECD,QAFD;;;AAIP,aAEE;AAAA;AAAA,UAAK,WAAU,SAAf;AAEE;AAAC,8BAAD;AAAA,YAAM,IAAG,gBAAT;AAEI;AAAA;AAAA,cAAM,WAAWA,SAASO,QAAT,CAAkB,WAAlB,IAAiC,UAAjC,GAA8C5D,SAA/D;AAAA;AAAA;AAFJ,SAFF;AAUE;AAAC,8BAAD;AAAA,YAAM,IAAG,mBAAT;AAEE;AAAA;AAAA,cAAM,WAAWqD,SAASO,QAAT,CAAkB,cAAlB,IAAoC,UAApC,GAAiD5D,SAAlE;AAAA;AAAA;AAFF;AAVF,OAFF;AAqBD;;;;EAhCiC0C,gBAAMC,S;;kBAArBqD,M;;;;;;;;;;;;;;;;;;;;ACHrB;;;;AACA;;;;;;;;;;IAEME,Q;;;AAEJ,oBAAYzG,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAEjB,UAAK6B,KAAL,GAAa,EAAb;AAFiB;AAKlB;;;;6BAGQ;;AAEP,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AAEE;AAAA;AAAA;AAAA;AAAA,SAFF;AAIE;AAAA;AAAA;AAEE;AAAA;AAAA;AAAA;AAAA,WAFF;AAGE;AAAA;AAAA;AAAA;AAAA,WAHF;AAIE;AAAA;AAAA;AAAA;AAAA,WAJF;AAKE;AAAA;AAAA;AAAA;AAAA,WALF;AAME;AAAA;AAAA;AAAA;AAAA;AANF,SAJF;AAcE;AAAA;AAAA;AAGIuC,iBAAOqD,OAAP,CAAe,KAAKzH,KAAL,CAAW6J,kBAA1B,EACGC,OADH,GAEGC,MAFH,CAEU,gBAAO;;AAEX,mBAAO1J,KAAK,CAAL,EAAQ2J,QAAR,GAAmB,CAA1B;AACD,WALL,EAMG5J,GANH,CAMO,UAACC,IAAD,EAAOC,CAAP,EAAW;;AAEd;AACA;AACA,gBAAIgH,OAAOjH,KAAK,CAAL,EAAQ4J,cAAR,CACQC,KADR,CACc,CADd,EACiB7J,KAAK,CAAL,EAAQ4J,cAAR,CAAuBzC,OAAvB,CAA+B,KAA/B,CADjB,EAEQ0C,KAFR,CAEc,CAFd,EAEiB7J,KAAK,CAAL,EAAQ4J,cAAR,CAAuBzC,OAAvB,CAA+B,GAA/B,IAAoC,CAFrD,CAAX;;AAIA,mBAEE;AAAA;AAAA,gBAAK,KAAKlH,CAAV;AACE;AAAA;AAAA;AAAOD,qBAAK,CAAL,EAAQ8J;AAAf,eADF;AAEE;AAAA;AAAA;AAAO9J,qBAAK,CAAL,EAAQ6E,MAAf;AAAA;AAAA,eAFF;AAGE;AAAA;AAAA;AAAO7E,qBAAK,CAAL,EAAQ2J;AAAf,eAHF;AAIE;AAAA;AAAA;AAAA;AAAQ3J,qBAAK,CAAL,EAAQiJ,KAAR,CAAcrF,OAAd,CAAsB,CAAtB;AAAR,eAJF;AAKE;AAAA;AAAA;AAAOqD;AAAP;AALF,aAFF;AAUH,WAxBD;AAHJ;AAdF,OADF;AAgDD;;;;EA5DoBrE,gBAAMC,S;;AA+D7B,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAyB;AAAA,MAAtBqB,eAAsB,QAAtBA,eAAsB;;;AAE/C,SAAO;AACLqF,wBAAqBrF,gBAAgBqF;AADhC,GAAP;AAGD,CALD;;kBAOe,yBACb1G,eADa,EAEb,IAFa,EAGbsD,QAHa,C;;;;;;;;;;;;;;;;;;;;ACzEf;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMyE,Y;;;AAEJ,wBAAYlL,KAAZ,EAAmB;AAAA;;AAAA,4HACXA,KADW;;AAAA,UAuBjB4H,UAvBiB,GAuBJ,YAAM;;AAEjB,YAAK5G,QAAL,CAAc,EAAE6G,gBAAiB,KAAnB,EAAd;AACD,KA1BgB;;AAAA,UA4BjBsD,UA5BiB,GA4BJ,UAAC9K,IAAD,EAAS;AAAA,UAEZ+K,QAFY,GAEC,MAAKvJ,KAFN,CAEZuJ,QAFY;AAAA,UAGdlG,MAHc,GAGH7E,KAAK,CAAL,CAHG,CAGd6E,MAHc;;AAIpB,UAAImG,SAAY,MAAKrL,KAAL,CAAWkB,KAAvB,cAAJ;;AAEA,UAAIoK,oBAAJ;;AAEA,UAAGF,SAASjH,QAAT,CAAkBe,MAAlB,CAAH,EAA6B;;AAE3BoG,sBAAcF,SAASrB,MAAT,CAAgB;AAAA,iBAAQ1J,SAAS6E,MAAjB;AAAA,SAAhB,CAAd;AACD,OAHD,MAII;;AAEFoG,mDAAmB,MAAKzJ,KAAL,CAAWuJ,QAA9B,IAAwC/K,KAAK,CAAL,EAAQ6E,MAAhD;AACD;;AAEDqG,mBAAaC,OAAb,CAAqBH,MAArB,EAA6B9F,KAAKkG,SAAL,CAAeH,WAAf,CAA7B;;AAEA,YAAKtK,QAAL,CAAc;;AAEZoK,kBAAWE;AAFC,OAAd;AAID,KAnDgB;;AAGf,UAAKzJ,KAAL,GAAa;;AAETgG,sBAAiB,KAFR;AAGT6D,YAAM,KAHG;AAITN,gBAAU;AAJD,KAAb;AAHe;AASjB;;;;wCAEkB;;AAEhB,UAAIC,SAAY,KAAKrL,KAAL,CAAWkB,KAAvB,cAAJ;;AAEA,UAAIyK,iBAAiBJ,aAAaK,OAAb,CAAqBP,MAArB,CAArB;;AAEA,WAAKrK,QAAL,CAAc;;AAEZoK,kBAAUO,iBAAiBpG,KAAKC,KAAL,CAAY+F,aAAaK,OAAb,CAAqBP,MAArB,CAAZ,CAAjB,GAA8D;AAF5D,OAAd;AAIF;;;6BAgCS;AAAA;;AAAA,mBAE0B,KAAKxJ,KAF/B;AAAA,UAECgG,cAFD,UAECA,cAFD;AAAA,UAEiB6D,IAFjB,UAEiBA,IAFjB;AAAA,mBAG4B,KAAK1L,KAHjC;AAAA,UAGCsE,SAHD,UAGCA,SAHD;AAAA,UAGYuH,WAHZ,UAGYA,WAHZ;;;AAKP,aAEE;AAAA;AAAA;AAEA;AAAA;AAAA,YAAK,WAAU,eAAf;AAEE;AAAA;AAAA;AAEE;AACE,2DAA0C,0BAAc,GAAd,GAAoB,GAA9D,OADF;AAEE,uBAAS;AAAA,uBAAI,OAAK7K,QAAL,CAAc,EAAC0K,MAAM,KAAP,EAAc7D,gBAAgB,IAA9B,EAAd,CAAJ;AAAA;AAFX,cAFF;AAOE;AACE,8CAA6B,0BAAc,GAAd,GAAoB,GAAjD,OADF;AAEE,uBAAS;AAAA,uBAAI,OAAK7G,QAAL,CAAc,EAAC0K,MAAM,CAACA,IAAR,EAAc7D,gBAAgB,KAA9B,EAAd,CAAJ;AAAA;AAFX;AAPF,WAFF;AAgBE;AAAA;AAAA;AAAA;AAAA,WAhBF;AAkBE;AAAA;AAAA;AAEGgE,2BACG;AAAA;AAAA;AAEE;AAAA;AAAA,kBAAM,WAAU,eAAhB;AAAA;AAAA,eAFF;AAGE;AAAA;AAAA,kBAAM,WAAU,eAAhB;AAAA;AAAA;AAHF,aAHN;AASIvH,wBAEAF,OAAOqD,OAAP,CAAenD,SAAf,EACG+D,IADH,GAEG0B,MAFH,CAEU,UAAC1J,IAAD,EAAQ;;AAEZ,kBAAG,OAAKwB,KAAL,CAAW6J,IAAd,EAAmB;;AAEjB,uBAAO,IAAP;AACD,eAHD,MAII;;AAEF,uBAAO,CAAC,OAAK7J,KAAL,CAAWuJ,QAAX,CAAoBjH,QAApB,CAA6B9D,KAAK,CAAL,EAAQ6E,MAArC,CAAR;AACD;AACJ,aAZH,EAaG9E,GAbH,CAaO,UAACC,IAAD,EAAOC,CAAP,EAAW;AAAA,2BAEWD,KAAK,CAAL,CAFX;AAAA,kBAENJ,IAFM,UAENA,IAFM;AAAA,kBAEAiF,MAFA,UAEAA,MAFA;AAAA,kBAINkG,QAJM,GAIO,OAAKvJ,KAJZ,CAINuJ,QAJM;;;AAMd,qBAEA;AAAA;AAAA,kBAAK,KAAK9K,CAAV,EAAa,WAAU,0BAAvB;AAEM,uBAAKuB,KAAL,CAAW6J,IAAX,IAGA;AACE,0CAAsBN,SAASjH,QAAT,CAAkBe,MAAlB,IAA4B,MAA5B,GAAqC,OAA3D,cAAyE,0BAAc,GAAd,GAAoB,GAA7F,OADF;AAEE,2BAAS;AAAA,2BAAK,OAAKiG,UAAL,CAAgB9K,IAAhB,CAAL;AAAA;AAFX,kBALN;AAYIJ,wBACA;AAAA;AAAA,oBAAK,WAAU,gBAAf,EAAgC,OAAO,EAACgL,SAASG,SAASjH,QAAT,CAAkBe,MAAlB,IAA4B,IAA5B,GAAmC,GAA7C,EAAvC;AAGI;AAAA;AAAA;AAEE;AAAA;AAAA,wBAAM,OAAO,EAAEyF,OAAQ1K,KAAKsJ,WAAL,GAAmBlJ,KAAK,CAAL,EAAQiJ,KAA3B,GAAmC,OAAnC,GAA6C,KAAvD,EAAb;AAAA;AAA+EjJ,2BAAK,CAAL,EAAQ6E;AAAvF,qBAFF;AAIE;AAAA;AAAA;AAAA;AAAQjF,2BAAK6L;AAAb,qBAJF;AAAA;AAMKzL,yBAAK,CAAL,EAAQiJ,KAAR,GACH;AAAA;AAAA,wBAAM,OAAO,EAAEqB,OAAQ1K,KAAKsJ,WAAL,GAAmBlJ,KAAK,CAAL,EAAQiJ,KAA3B,GAAmC,OAAnC,GAA6C,KAAvD,EAAb;AACIjJ,2BAAK,CAAL,EAAQiJ;AADZ,qBADG,GAKH;AAAA;AAAA,wBAAM,OAAO,EAAEqB,OAAQ1K,KAAKsJ,WAAL,GAAmBtJ,KAAK8L,IAAxB,GAA+B,OAA/B,GAAyC,KAAnD,EAAb;AACG9L,2BAAKsJ;AADR;AAXF,mBAHJ;AAoBE;AAAA;AAAA;AACE;AAAA;AAAA;AAAOtJ,2BAAK+L;AAAZ,qBADF;AAEE;AAAA;AAAA;AAAO/L,2BAAKuJ,aAAZ;AAAA;AAAA;AAFF;AApBF;AAbJ,eAFA;AA2CD,aA9DH,CAFA,GAkEA,8BAAC,qBAAD,IAAa,MAAM,OAAnB;AA3EJ;AAlBF,SAFA;AAsGI3B,0BAEA;AAAA;AAAA,YAAK,WAAU,iBAAf,EAAiC,SAAS;AAAA,qBAAI,OAAK7G,QAAL,CAAc,EAAC6G,gBAAgB,KAAjB,EAAd,CAAJ;AAAA,aAA1C;AAEE;AAAA;AAAA,cAAK,SAAU,iBAACM,CAAD;AAAA,uBAAMA,EAAEvG,eAAF,EAAN;AAAA,eAAf;AAEM,0CAAC,sBAAD,IAAc,MAAM,KAAKgG,UAAzB;AAFN;AAFF;AAxGJ,OAFF;AAqHD;;;;EAjLsB3E,gBAAMC,S;;AAoLjC,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAqC;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AAAA,MAAtBoB,eAAsB,QAAtBA,eAAsB;;;AAE3D,SAAO;AACLtD,WAAOkC,WAAWlC,KADb;AAELoD,eAAYE,gBAAgBF,SAFvB;AAGLuH,iBAAarH,gBAAgBqH;AAHxB,GAAP;AAKD,CAPD;;kBASe,yBACb1I,eADa,EAEb,IAFa,EAGb+H,YAHa,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC/LCtI,S,GAAAA,S;QAKAqJ,M,GAAAA,M;QAKAC,K,GAAAA,K;AAdT,IAAMrL,4BAAU,4BAAhB;;AAEA,IAAMmC,wBAAQ,+JAAd;;AAEA,SAASJ,SAAT,GAAoB;;AAEvB,WAAOC,OAAOsJ,UAAP,GAAoB,IAA3B;AACH;;AAEM,SAASF,MAAT,GAAiB;;AAEpB,WAAOpJ,OAAOsJ,UAAP,GAAoB,GAA3B;AACH;;AAEM,SAASD,KAAT,GAAgB;;AAEnB,WAAO,CAACD,MAAD,IAAW,CAACrJ,SAAnB;AACH,C;;;;;;;;;;;;ACjBD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACVA;AAAA;AAAsD;;AAEtD;AACA;AACA,cAAc,uEAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAO;AACrB;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAChB;AACU;;AAEhC;;AAEP,gBAAgB,kDAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;;AAEA,qBAAqB;;AAErB;;AAEA,WAAW,SAAS,oBAAoB,EAAE,SAAS,gDAAM,QAAQ,mBAAmB;;AAEpF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,8DAAO;AAClB;;AAEA;;AAEO;;AAEP;;AAEA,gBAAgB,kDAAG;;AAEnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,mBAAmB;;AAEnB;AACA;AACA;;AAEA;;AAEA,SAAS,SAAS,0BAA0B,EAAE,SAAS,gDAAM,QAAQ,mBAAmB;;AAExF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,WAAW,8DAAO,aAAa,eAAe;;AAE9C,WAAW,8DAAO,mBAAmB,+BAA+B;;AAEpE,WAAW,8DAAO,wBAAwB,qBAAqB;;AAE/D;;AAEO;;AAEP;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,KAAK;;AAEL,qBAAqB,kDAAG,GAAG,eAAe;;AAE1C;;AAEA,qBAAqB,UAAU,gCAAgC;;AAE/D;;AAEA;;AAEA,WAAW,SAAS,sBAAsB,EAAE,SAAS,gDAAM,SAAS,sBAAsB;;AAE1F;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,qBAAqB;;AAE9B;;AAEA,WAAW,YAAY;;AAEvB,eAAe,8DAAO,YAAY,gCAAgC;AAClE;AACA;;AAEA,eAAe,8DAAO,YAAY,qBAAqB;AACvD,K;AACA;;AAEO;;AAEP,gBAAgB,kDAAG;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,qBAAqB;;AAErB;;AAEA;;AAEA,SAAS,SAAS,cAAc,SAAS,gDAAM,QAAQ,mBAAmB;;AAE1E;AACA;AACA;;AAEA;AACA;;AAEA,WAAW,8DAAO,aAAa,uBAAuB;AACtD,C;;AAEO;;AAEP,gBAAgB,kDAAG;;AAEnB;AACA;AACA;AACA,GAAG;;AAEH,qBAAqB;;AAErB;;AAEA;;AAEA,SAAS,SAAS,8BAA8B,SAAS,gDAAM,QAAQ,mBAAmB;;AAE1F;AACA;AACA;;AAEA;AACA;;AAEA,WAAW,8DAAO,mBAAmB,wDAAwD;AAC7F,C;;AAEO;;AAEP,gBAAgB,kDAAG;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,qBAAqB;;AAErB;;AAEA;;AAEA,SAAS,SAAS,4BAA4B,SAAS,gDAAM,QAAQ,mBAAmB;;AAExF;AACA;AACA;;AAEA;AACA;;AAEA,WAAW,8DAAO,wBAAwB,6BAA6B;AACvE,C;;AAEe;AACf;AACA;AACA,CAAC;;;;;;;;;;;;;AC9RD;AAAA;AAAiD;;AAEjD;AACA;AACA,cAAc,kEAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,cAAc,kEAAO;AACrB;AACA;AACA;;AAEe;AACf;AACA;AACA,C;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACX;AACD;AACV;;AAEtB;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,CAAC,oEAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,kDAAG;AACnB,MAAM;AACN,GAAG;;AAEH,mBAAmB;;AAEnB;;AAEA;;AAEA,SAAS,SAAS,QAAQ,EAAE,SAAS,gDAAM,QAAQ,mBAAmB;;AAEtE;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,WAAW,yDAAO;AAClB;;AAEO;;AAEP,mBAAmB,kDAAG;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,mBAAmB,UAAU,yCAAyC;;AAEtE;;AAEA;;AAEA,SAAS,SAAS,UAAU,EAAE,SAAS,gDAAM,SAAS,sBAAsB;;AAE5E;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,WAAW,yDAAO;AAClB;;AAEe;AACf;AACA;AACA,C","file":"./modules/1.ce5a0a066b493b378a6f.js","sourcesContent":["import React from 'react';\n\nexport default function DataNav (props){\n\n  const { data, switchItem, selectedDataNavItem } = props;\n\n  return (\n\n    <div className=\"data-nav\">\n        {data.map( (item, i)=>{\n\n          return(\n\n            <span \n              key={i}\n              onClick={()=>switchItem(item)}\n              className={selectedDataNavItem === item ? \"selected\" : undefined}\n             >\n             {item}\n            </span>\n          )\n        })}\n    </div>\n  );\n};","import React from \"react\";\nimport { logoUrl } from \"./utils\"\n\nconst front_end_url = \"https://github.com/iamjoncannon/Graff_Exchange\"\nconst back_end_url = \"https://github.com/iamjoncannon/Graff_Exchange_API\"\n\nconst Footer = (props) => {\n\n    return (\n\n        <footer>\n                <a href={front_end_url} target=\"_blank\"> \n                    <img src=\"https://jayceecodesphotos.s3.amazonaws.com/react.png\" /> \n                </a>\n                \n                <a href={front_end_url} target=\"_blank\"> \n                \n                    <img src=\"https://jayceecodesphotos.s3.amazonaws.com/redux.png\" />\n                </a>\n\n                <a href={front_end_url} target=\"_blank\"> \n\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/96/Sass_Logo_Color.svg/2000px-Sass_Logo_Color.svg.png\" style={{backgroundColor: \"white\", borderRadius: \"10px\"}}/>\n                </a>\n\n                <a href={back_end_url} target=\"_blank\"> \n\n                    <img src={logoUrl} />\n                </a>\n                \n                <a href={back_end_url} target=\"_blank\"> \n\n                    <img src={\"http://pluspng.com/img-png/nodejs-logo-png-nice-images-collection-node-js-desktop-wallpapers-370.png\"} />\n                </a>\n\n                <a href={back_end_url} target=\"_blank\"> \n\n                    <img src=\"https://cdn.iconscout.com/icon/free/png-512/redis-6-1175105.png\" />\n                </a>\n\n                <a href={back_end_url} target=\"_blank\"> \n                    <img src=\"https://jayceecodesphotos.s3.amazonaws.com/postgres.png\" />\n                </a>\n                \n                <a href={back_end_url} target=\"_blank\"> \n\n                    <img src=\"https://jayceecodesphotos.s3.amazonaws.com/aws.png\" style={{borderRadius: \"10px\"}}/>\n                </a>\n\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react';\nimport { blurb, logoUrl } from './utils'\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { loginThunk, registerThunk } from \"../../store/User/thunks_for_User.js\";\n\nclass Landing extends React.Component {\n \n  constructor(props){\n\n      super(props)\n      \n      this.state = {\n          mode : 'sign-in',\n          firstName: \"\",\n          lastName: \"\",\n          email : \"\",\n          password : \"\",\n          confirm_password: \"\",\n          submitted: false,\n          server_landing_page_error: true, \n          local_landing_page_error: null  \n      }\n  }\n\n  componentDidMount(){\n\n    // the background needs to be cream for the desktop to seem inset\n    // ...but only for this page\n\n    document.body.style.backgroundColor = \"#F9FAFB\" \n  }\n\n  componentWillUnmount(){\n\n    document.body.style.backgroundColor = 'white' \n  }\n\n  componentDidUpdate(){\n\n    if(this.props.server_landing_page_error && this.state.submitted){\n\n      this.setState({submitted: false, \n                     server_landing_page_error: true\n                    })\n    }\n  }\n\n  DemoAccount = () => {\n\n    this.setState({\n          mode : 'sign-in',\n          email : \"moneybags@graff.app\",\n          password : \"password\"\n    })\n\n    setTimeout(()=>this.handleSubmit(), 50)\n  }\n\n  handleChange = (evt) => {\n\n      this.setState({\n          [evt.target.name]:evt.target.value\n      })\n  }\n\n  handleSubmit = (evt) => {\n\n      if(evt){\n\n        evt.preventDefault()\n        evt.stopPropagation()\n      }\n\n      let { firstName, lastName, email, password } = this.state\n\n      // validate email\n\n      const re = /\\S+@\\S+\\.\\S+/;\n\n      if(!re.test(email)){\n\n        this.setState({local_landing_page_error: \"Invalid Email\"}) \n        setTimeout(()=> this.setState({local_landing_page_error: null}), 5000) \n        return \n      }\n      \n      if(password === \"\"){\n\n        this.setState({local_landing_page_error: \"Invalid Password\"}) \n        setTimeout(()=> this.setState({local_landing_page_error: null}), 5000) \n        return \n      }\n\n      if(this.state.mode === \"sign-in\"){\n\n        this.props.handleLogin(email, password)\n      }\n\n      if(this.state.mode === \"sign-up\"){\n\n        // validate that passwords match\n\n        if(password !== this.state.confirm_password){\n\n          this.setState({local_landing_page_error: \"Passwords do not match\"}) \n          setTimeout(()=> this.setState({local_landing_page_error: null}), 5000) \n\n          return \n        }\n\n        this.props.handleRegister(firstName, lastName, email, password)\n      }\n\n      this.setState({submitted: true, server_landing_page_error: true})\n  }\n\n  handleMode = (mode) => {\n\n    this.setState( { mode: mode, server_landing_page_error: false, local_landing_page_error: null } )\n  }\n\n  render() {\n\n    const isDesktop = window.innerWidth > 1100;\n\n    const { mode, local_landing_page_error } = this.state\n    \n    // this.state is a boolean- don't display if user switches between screens \n    const server_landing_page_error = this.state.server_landing_page_error && this.props.server_landing_page_error\n    \n    if(this.props.isLoggedIn){\n        \n        return (\n            <Redirect to=\"/all/watchlist\" />\n        )\n    }\n    else {\n\n      return (\n\n        <div className={ isDesktop && mode === \"sign-up\" ? \"landing landing-rev\" : \"landing\"} >\n        \n          <div className=\"header\">\n\n              <span className=\"title\">\n                Graff Exchange\n              </span>\n\n              <span className=\"blurb\">\n\n                {blurb}\n                \n              </span>\n              \n              <img src={logoUrl} />\n\n              {!isDesktop &&\n\n                <div className=\"sign-btns\">\n\n                  <span \n                    className={ mode === \"sign-up\" ? \"unselected\" : undefined}\n                    onClick={()=>this.handleMode(\"sign-in\")}\n                  >             \n                      Sign In\n                    </span>\n\n                  <span \n                    className={ mode === \"sign-in\" && !isDesktop ? \"unselected\" : undefined}\n                    onClick={()=>this.handleMode(\"sign-up\")}\n                  >\n                    Sign Up\n                  </span>\n\n                </div>\n              }\n\n              {isDesktop && mode === \"sign-up\" && \n\n                  <div className=\"sign-btns\">\n                    \n                      <span > Already have an account? </span> \n\n                    \n                      <span \n                        onClick={()=>this.handleMode(\"sign-in\")}\n                      >             \n                          Sign In\n                      </span> \n                  </div>\n            }\n\n            { isDesktop && mode == \"sign-in\" && \n\n              <div className=\"sign-btns\">\n\n                <span>Don't have an account? </span> \n\n                <span \n                  onClick={()=>this.handleMode(\"sign-up\")}\n                >\n                  Sign Up\n                </span>\n\n              </div>\n            }\n\n          </div>\n\n          <div className=\"form\">\n          <form>\n\n            {\n              mode === \"sign-up\" &&\n\n              <div>\n\n                <span>First Name</span>\n\n                <input \n                  type=\"text\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.handleChange} \n                />\n\n              </div>\n            }\n            \n            {\n              mode === \"sign-up\" &&\n\n              <div>\n\n                <span>Last Name</span>\n\n                <input \n                  type=\"text\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.handleChange} \n                />\n\n              </div>         \n            }\n\n            <div>\n\n              <span>Email</span>\n\n              <input\n                type=\"email\"\n                name=\"email\"\n                required\n                value={this.state.email}\n                onChange={this.handleChange} \n              />\n\n            </div>\n\n            <div>\n\n              <span>Password</span>\n\n              <input \n                onChange={this.handleChange}\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n              />\n\n            </div>\n\n          {\n\n            mode === \"sign-up\" && \n\n            <div>\n\n              <span>Confirm Password</span>\n\n              <input \n                onChange={this.handleChange}\n                type=\"password\"\n                name=\"confirm_password\"              \n                value={this.state.confirm_password}\n              />\n            </div>\n          }\n\n          <button\n            onClick={ this.handleSubmit }\n          >\n              {\n                mode === 'sign-in' && !this.state.submitted ? \"Sign In\" : \n                mode === 'sign-up' && !this.state.submitted ? \"Sign Up\" :\n                this.state.submitted ? \"Loading...\" : \"\"\n              }\n\n          </button>\n\n          { server_landing_page_error && <span className=\"error-message\" >{this.props.server_landing_page_error}</span>}\n          { local_landing_page_error && <span className=\"error-message\" >{local_landing_page_error}</span>}\n          { mode === \"sign-in\" && <span onClick={this.DemoAccount}>Sign into Demo Account</span> }\n          </form>\n          </div>      \n        </div>\n      );\n  }\n  }\n}\n\nconst mapStateToProps = ({ User_state }) => {\n  return {\n      isLoggedIn : User_state.isLoggedIn,\n      server_landing_page_error : User_state.landing_page_error\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n    handleLogin: (email, password) => dispatch(loginThunk(email, password)),\n    handleRegister: (...args) => dispatch(registerThunk(...args)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Landing);\n","import React, { Suspense, lazy } from 'react';\nimport { connect } from \"react-redux\";\nimport { logoUrl } from './utils'\nimport { Link } from 'react-router-dom'\nimport Socket from './Socket'\nimport { isDesktop } from './utils'\nimport { hydratePortfolioThunk } from \"../../store/Portfolio/thunks_for_Portfolio.js\"\nimport UserActions from \"../../store/User/actions_for_User.js\"\n\n// since the main nav gets mounted \n// when the user logs in, and its mounted\n// through the application workflow, it will\n// be used to retrieve initial data and will\n// host the socket\n\nclass MainNav extends React.Component {\n \n  constructor(props){\n      super(props)\n\n  } \n\n  componentDidMount(){\n\n    const { token, hydratePortfolio } = this.props\n    \n    hydratePortfolio(token)\n  }\n\n  render(){\n\n    const { pathname } = this.props.location;\n\n    return (\n\n      <div className=\"main-nav\">\n\n            <Socket />\n\n        { isDesktop && \n    \n          <div className=\"desk-nav\">\n              <span>Graff Exchange</span>\n              {/* <span>Account</span> */}\n              <span>{this.props.Name}</span>\n              <span>Balance: ${Number(this.props.Balance).toFixed(2)}</span>\n              <span onClick={this.props.LogOut}>Log Out</span>\n          </div> \n        }\n\n        <div className=\"all-screens\">\n          \n          <Link to=\"/all/watchlist\">\n\n            <i className={`fas fa-home fa-${isDesktop ? \"2\" : \"7\"}x ${ pathname.includes(\"/all\") ? \"selected\" : \"\"}`} />\n\n            {isDesktop() && <span>Portfolio</span>}\n          \n          </Link>\n\n          <img src={logoUrl} />\n          \n    \n            <Link to={ Object.keys(this.props.portfolio).length > 0 ? \"/indiv/perf\" : \"/all/watchlist\"}>\n\n              {isDesktop() && <span>Holdings</span>}   \n\n              <i className={`fas fa-chart-bar fa-${isDesktop ? \"2\" : \"7\"}x ${ pathname.includes(\"/indiv\") ? \"selected\" : \"\"}`} />\n            \n            </Link>\n \n\n        </div>\n\n      </div>\n\n    );\n  }\n\n};\n\nconst mapStateToProps = ({ User_state, Portfolio_state }) => {\n  \n  return {\n    Name: User_state.Name,\n    Balance: User_state.balance,\n    token: User_state.token,\n    portfolio: Portfolio_state.portfolio\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  LogOut : () => dispatch(UserActions.LogOut()),\n  hydratePortfolio: (token) => dispatch(hydratePortfolioThunk(token)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainNav);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport symbolHash from './symbolHash.json'\nimport  actions  from \"../../store/Portfolio/actions_for_Portfolio.js\"\n\nclass Socket extends React.Component {\n \n  constructor(props) {\n    super(props);\n    \n    this.state ={ \n\n    }\n  }\n\n  connectToSocket = () => {\n\n    const socket = io('https://ws-api.iextrading.com/1.0/last')\n    \n    const myBook = []\n    \n    for (let stock in this.props.portfolio){\n\n      myBook.push(this.props.portfolio[stock].symbol)\n    }\n\n    socket.on('connect', () => {\n\n      myBook.forEach( stock=>{\n        socket.emit('subscribe', stock)\n      })\n    })\n\n    socket.on('message', message => {\n    \n      this.props.handleSocketMessage(JSON.parse(message))\n    })\n\n    this.setState({ socket, portfolioSize: Object.keys(this.props.portfolio).length })\n  }\n\n  async componentDidUpdate(){\n\n    let currentPortfolio = Object.keys(this.props.portfolio).length\n\n    let portfolioChanged = currentPortfolio !== this.state.portfolioSize\n\n    if( portfolioChanged ){\n\n      // otherwise we get a memory leak\n      await this.state.socket.close()\n      \n      this.connectToSocket()\n    }\n  }\n\n  componentDidMount(){\n    this.connectToSocket()\n  }\n\n  render() {\n    return (\n      <div style={{height: \"0\", width: \"0\"}}></div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ Portfolio_state }) => {\n    return {\n      portfolio : Portfolio_state.portfolio,\n    };\n  };\n  \nconst mapDispatchToProps = dispatch => ({\n\n    handleSocketMessage: (message)=>dispatch(actions.handleSocketMessage(message))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Socket);","import React from 'react';\nimport { Route, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from \"react-redux\";\n\nimport Landing from './Landing'\nimport Footer from './Footer'\nimport MainNav from './MainNav'\n\nimport IndivNav from './indiv/IndivNav'\nimport IndivPerf from './indiv/IndivPerf'\nimport IndivFin from './indiv/IndivFin'\nimport IndivNews from './indiv/IndivNews'\nimport IndivTrans from './indiv/IndivTrans'\n\nimport AllNav from './portfolio/AllNav'\nimport AllWatchlist from './portfolio/AllWatchlist'\nimport AllTrans from './portfolio/AllTrans'\n\nconst App = (props) => {\n\n  // login route\n\n  if(props.location.pathname === \"/\"){\n\n    return (\n\n      <div className=\"app-container\">\n  \n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/\" component={Footer} />\n\n      </div>\n\n    )\n  }\n  else{\n \n    // trying to hit logged in route \n    // but not logged in \n\n    if(!props.isLoggedIn){\n      \n      return(\n        \n        <Redirect to=\"/\" />\n      ) \n    }\n    else{\n      \n      // logged in routes\n      \n        return (\n          \n          <div className=\"app-container\">\n                  \n            <Route path=\"/\" component={MainNav} />\n\n            <Route path=\"/indiv\" component={IndivNav} />\n            <Route exact path=\"/indiv/perf\" component={IndivPerf} />\n            <Route exact path=\"/indiv/finan\" component={IndivFin} />\n            <Route exact path=\"/indiv/news\" component={IndivNews} />\n            <Route exact path=\"/indiv/trans\" component={IndivTrans} />\n            \n            <Route path=\"/all\" component={AllNav} />\n            <Route exact path=\"/all/watchlist\" component={AllWatchlist} />\n            <Route exact path=\"/all/transactions\" component={AllTrans} />\n\n        </div>\n      )\n    }\n  }\n};\n\nconst mapStateToProps = ({ User_state }) => {\n  return {\n      isLoggedIn : User_state.isLoggedIn\n  };\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  null\n)(App))\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport DataNav from '../DataNav'\nimport { hydrateQuarterlyFinancialsThunk } from \"../../../store/Portfolio/thunks_for_Portfolio\"\nimport { isCell } from \"../utils\"\nimport LoadingDots from '../loadingDots'\n\n// Financials Page- displays quarterly financial reports\n\nclass IndivFin extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDataNavItem : null \n    }\n  }\n\n  dataSwitch = (newDisplay) => {\n    window.scrollTo(0, 0);\n\n    this.setState({\n\n      selectedDataNavItem : newDisplay,\n    })\n  }\n\n  hydrate_data = () => {\n\n    const { hydrateQuarterlyFinancialsThunk, selectedPortfolioItem} = this.props\n      \n    hydrateQuarterlyFinancialsThunk(selectedPortfolioItem)\n  }\n\n  componentDidMount(){\n\n    const { selectedPortfolioItem, portfolio } = this.props\n\n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n\n    if(!isCell() && !selectedPortfolioItem_object.financials){\n\n      this.hydrate_data()\n    }\n\n  }\n\n  componentDidUpdate(){\n\n    const { selectedPortfolioItem, portfolio } = this.props\n\n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n\n    if(!isCell() && !selectedPortfolioItem_object.financials){\n\n      this.hydrate_data()\n    }\n\n  }\n\n  render() {\n\n    window.scrollTo(0, 0);\n\n    const { selectedPortfolioItem, portfolio} = this.props\n\n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n    \n                      // have to cascade like this to prevent null errors\n    const is_Loaded = selectedPortfolioItem_object \n                      && selectedPortfolioItem_object.financials \n                      && selectedPortfolioItem_object.financials.length\n\n    const no_financial_data = selectedPortfolioItem_object \n                              && selectedPortfolioItem_object.financials\n                              && selectedPortfolioItem_object.financials.length === 0\n\n    // harvest dates of reports from data \n    let data_nav_items = []\n    \n    if(is_Loaded){\n\n      const { financials } = selectedPortfolioItem_object\n\n      financials.forEach(each=> data_nav_items.push(each.date))\n    }\n\n    // interesting situation- we want to manage this nav state locally,\n    // but state depends on data hydrated globally \n\n    let selectedDataNavItem \n    \n    // solution- if this state proprty is null, ie component just mounted \n    if(!this.state.selectedDataNavItem){\n\n      selectedDataNavItem = data_nav_items[0]\n\n    }\n    else{\n\n      selectedDataNavItem = this.state.selectedDataNavItem\n    }\n\n    let whichFinancial = data_nav_items.indexOf(selectedDataNavItem)\n\n    return (\n\n      <div>\n\n        { is_Loaded && whichFinancial !== undefined? \n          <div className=\"indiv-fin indiv-container\">\n\n            <span>{selectedDataNavItem}</span>\n\n            \n              { Object.entries(selectedPortfolioItem_object.financials[whichFinancial])\n                .map( (item, i) =>{\n              \n                  return(\n\n                    <div key={i}>\n                        <span>\n                          {item[0]}\n                        </span>\n                      \n                        <span>\n                          {item[1]}\n                        </span>\n                    </div>\n                  )\n                })\n              }\n\n          </div>\n            : no_financial_data ? \n            <span className={\"error_message\"}>\n              Data Not Available\n            </span>\n            :\n            <div style={{display: \"block\", textAlign: \"center\"}}> \n                <LoadingDots size={\"10vh\"} />\n            </div>\n          }\n\n        <DataNav \n          data={data_nav_items} \n          selectedDataNavItem={selectedDataNavItem}\n          switchItem={this.dataSwitch}\n        />\n\n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = ({ Portfolio_state }) => {\n  return {\n    portfolio: Portfolio_state.portfolio,\n    selectedPortfolioItem: Portfolio_state.selectedPortfolioItem\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n  hydrateQuarterlyFinancialsThunk: (symbol) => dispatch(hydrateQuarterlyFinancialsThunk(symbol))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IndivFin);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom'\nimport { isDesktop, isCell, isTab } from '../utils'\nimport IndivSelector from './IndivSelector'\nimport TradeBox from './TradeBox'\nimport { hydrateSinglePortfolioPage } from \"../../../store/Portfolio/thunks_for_Portfolio.js\"\nimport actions  from '../../../store/Portfolio/actions_for_Portfolio.js'\n\n// this component manages hydrating data\n// for the individual stock section\n// as well as the navigational logic of\n// that section\n\nclass IndivNav extends React.Component {\n \n  constructor(props) {\n    super(props);\n\n    this.state = {\n        whichItem: null,\n        isModalShowing : false,\n        whichModal : null \n    }\n  }\n\n  hydrate_data(){\n\n    const { selectedPortfolioItem } = this.props\n\n    this.props.hydrateSinglePortfolioPage( selectedPortfolioItem )\n  }\n\n  componentDidMount(){\n\n    const { selectedPortfolioItem, portfolio } = this.props\n\n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n\n    if( isCell() && !selectedPortfolioItem_object.historical){\n\n      this.hydrate_data()\n    }\n  }\n\n  componentDidUpdate(){\n\n    const { selectedPortfolioItem, portfolio } = this.props\n\n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n\n    if(isCell() && !selectedPortfolioItem_object.historical){\n\n      this.hydrate_data()\n    }\n\n  }\n\n  closeModal = () => {\n\n    this.setState({ isModalShowing : false })\n  }\n\n  render() {\n\n    const { isModalShowing, whichModal } = this.state\n    const { pathname } = this.props.location\n    const { selectedPortfolioItem, portfolio, handleSymbolSelect } = this.props\n\n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n    \n    return (\n\n      <div>\n\n      <div className=\"individual-nav\">\n  \n        { isCell() ? \n       \n          <i className=\"fas fa-bars fa-7x\" \n             onClick={()=>this.setState({isModalShowing: true, whichModal: 'page-selector'})}\n          />\n          \n          :\n\n          <div style={ { width: isDesktop()? \"1.7vw\" : \"7vw\"} }>\n\n          </div>\n        \n        }\n\n        <div  \n          onClick={()=>this.setState({isModalShowing: true, whichModal: 'symbol-selector'})}\n        >\n  \n          <span>{selectedPortfolioItem_object && selectedPortfolioItem_object.symbol}</span> \n  \n            <i className=\"fas fa-angle-down fa-7x\" />\n         \n        </div>\n  \n        <span     \n          onClick={()=>this.setState({isModalShowing: true, whichModal: 'trade-box'})}\n        >\n          Trade\n        </span>\n      \n      </div>\n      {\n        !isCell() &&\n        \n        <div className=\"page-selector\">\n        \n          <IndivSelector \n            pathname={pathname} \n            exit={()=>{}}\n          />\n\n        </div>\n      \n      }\n\n      {\n        isModalShowing && \n\n        <div className=\"modal-container\" onClick={()=>this.setState({isModalShowing: false})}>\n\n          <div onClick={ (e)=> e.stopPropagation() } className={whichModal}>\n            \n              { whichModal === 'page-selector' &&\n\n                <IndivSelector \n                  pathname={pathname} \n                  exit={this.closeModal}\n                />\n              }\n\n              { whichModal === 'trade-box' && \n                \n                <TradeBox  \n                  exit={this.closeModal}\n                />\n              }\n\n              {\n                whichModal === 'symbol-selector' && portfolio &&\n\n                  <div onClick={(e)=> { \n                      handleSymbolSelect(e.target.textContent)\n                      this.setState({isModalShowing: false})\n                    }} > \n\n                    {Object.entries(portfolio)\n                        .sort()\n                        .map((item, i )=>{\n\n                        return(\n                          <span key={i}>{item[0]}</span>\n                        )\n                    })}\n                  </div>\n              }\n          </div>\n        </div>\n      }\n    </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ Portfolio_state, User_state }) => {\n  return {\n    token: User_state.token,\n    selectedPortfolioItem: Portfolio_state.selectedPortfolioItem,\n    portfolio: Portfolio_state.portfolio\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  hydrateSinglePortfolioPage: (...args) => dispatch(hydrateSinglePortfolioPage(...args)),\n  handleSymbolSelect: (symbol) => dispatch(actions.handleSymbolSelect(symbol)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IndivNav);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { hydrateNewsThunk } from \"../../../store/Portfolio/thunks_for_Portfolio\"\nimport { isCell } from \"../utils\"\nimport LoadingDots from '../loadingDots'\n\nclass IndivNews extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n  }\n\n  hydrate_data = () => {\n\n    const { hydrateNewsThunk, selectedPortfolioItem } = this.props \n    \n    hydrateNewsThunk(selectedPortfolioItem)\n  }\n\n  componentDidMount(){\n\n    const { selectedPortfolioItem, portfolio } = this.props\n    \n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n\n    if(!isCell() && !selectedPortfolioItem_object.news){\n   \n      this.hydrate_data()\n    }\n    \n  }\n\n  componentDidUpdate(){\n    \n    const { selectedPortfolioItem, portfolio } = this.props\n    \n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n\n    if(!isCell() && !selectedPortfolioItem_object.news){\n   \n      this.hydrate_data()\n    }\n\n  }\n\n  render(){\n\n    const { selectedPortfolioItem, portfolio } = this.props\n\n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n\n    const is_loaded = selectedPortfolioItem_object \n                      && selectedPortfolioItem_object.news \n                      && selectedPortfolioItem_object.news.length\n\n    const no_news_data = selectedPortfolioItem_object \n                        && selectedPortfolioItem_object.news \n                        && selectedPortfolioItem_object.news.length === 0\n\n    return (\n\n      <div className=\"indiv-container\">\n  \n        { is_loaded ? selectedPortfolioItem_object.news.map((newsItem, i) =>{\n  \n            return (\n                <div className=\"news-box\" key={i}> \n                    \n                    <div>\n  \n                        <span>\n                            <a href={newsItem.news_url} target=\"_blank\">\n                            {newsItem.title}\n                            </a>\n                        </span>\n  \n                        <span>\n                            {newsItem.date}\n                        </span>\n                        \n                        <span>\n                            {newsItem.text}\n                        </span>\n                    \n                    </div>\n  \n                    <img \n                        src={newsItem.image_url} \n                    />\n                </div>\n            )\n        })\n        : no_news_data ? \n            <span className={\"error_message\"}>\n              Data Not Available\n            </span>\n\n        :\n        <div style={{display: \"block\", textAlign: \"center\"}}> \n          <LoadingDots size={\"10vh\"} />\n        </div>\n        }\n      </div>\n    );\n\n  }\n}\n\nconst mapStateToProps = ({ Portfolio_state }) => {\n    return {\n      portfolio: Portfolio_state.portfolio,     \n      selectedPortfolioItem: Portfolio_state.selectedPortfolioItem,\n    };\n  };\n\nconst mapDispatchToProps = dispatch => ({\n\n  hydrateNewsThunk: (symbol) => dispatch(hydrateNewsThunk(symbol))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IndivNews);","import React, { Suspense, lazy } from 'react';\nimport { connect } from \"react-redux\";\nimport DataNav from '../DataNav'\nimport { hydrateTimeSeriesDataThunk } from \"../../../store/Portfolio/thunks_for_Portfolio\"\nimport { isCell } from \"../utils\"\n\nconst PerformanceChart = lazy(() => import('./PerformanceChart'))\n\nclass IndivPerf extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n\n      selectedDataNavItem : \"Week\",\n      current_holding: 0\n    }\n  }\n\n  // for mobile, data is hydrated by the nav\n  // component  \n\n  componentDidMount(){\n    \n    const { selectedPortfolioItem, portfolio } = this.props\n\n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n\n    if(!isCell() && !selectedPortfolioItem_object.historical){\n\n      this.hydrate_data()\n    }\n    \n  }\n\n  // the individual components don't remount when the nav component\n  // updates the selected portfolio item- we have to have each of them\n  // determine if they need to hydrate appropriate data upon update \n  \n  componentDidUpdate(){\n\n    const { selectedPortfolioItem, portfolio } = this.props\n\n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n\n    if(!isCell() && !selectedPortfolioItem_object.historical){\n\n      this.hydrate_data()\n    }\n  }\n\n  hydrate_data = () => {\n      \n    const { hydrateTimeSeriesDataThunk, selectedPortfolioItem} = this.props\n\n    hydrateTimeSeriesDataThunk(selectedPortfolioItem)\n  }\n\n  dataSwitch = (newDisplay) => {\n\n    this.setState({\n\n      selectedDataNavItem : newDisplay,\n    })\n  }\n\n  render() {\n\n    const { selectedDataNavItem } = this.state\n    \n    const { selectedPortfolioItem, portfolio } = this.props \n\n    const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n\n    let { current_holding } = selectedPortfolioItem_object\n    \n    function formatChange(input){\n\n      return (input * 100).toFixed(2)\n    }\n\n    function chartPeriod(period){\n\n      switch(period){\n\n        case \"Week\": \n          return 5\n        case \"Month\":\n          return 30\n        case \"Year\":\n          return 365\n      }\n    }\n\n    return (\n\n      <div className=\"indiv-perf\">\n        \n        <div className=\"ticker-box\">\n\n          <span>\n            $ {selectedPortfolioItem_object && selectedPortfolioItem_object.price \n                ?   \n                selectedPortfolioItem_object.price\n                :\n                selectedPortfolioItem_object.data.latestPrice\n              }\n          </span>\n\n          <span>\n\n            {selectedPortfolioItem_object && selectedPortfolioItem_object.data && formatChange(selectedPortfolioItem_object.data.changePercent)}%\n        \n          </span>\n\n        </div>\n\n      { selectedPortfolioItem_object && selectedPortfolioItem_object.price &&\n        \n          <div className=\"first-datapoints\">\n\n                  {[[\"Holdings\", `${current_holding}`],\n                    [\"Value\", `$${ (current_holding * selectedPortfolioItem_object.price).toFixed(2)}`]].map( (item, i)=>{\n\n                    return(\n\n                      <div key={i}>\n                        <span>\n                          {item[0]}\n                        </span>\n                        <span>\n                          {item[1]}\n                        </span>\n                      </div>\n                    )\n                  })}\n          </div>\n        \n        } \n\n        <div className=\"chart-container\">\n\n          <span> \n\n            {selectedDataNavItem}\n          \n          </span>\n          <Suspense fallback=\"Loading...\">\n            <PerformanceChart period={chartPeriod(selectedDataNavItem)} />\n          </Suspense>\n        </div>\n\n        <DataNav \n          data={[\"Week\", \"Month\", \"Year\"]} \n          selectedDataNavItem={selectedDataNavItem}\n          switchItem={this.dataSwitch}\n        />\n    \n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = ({ Portfolio_state }) => {\n  return {\n    selectedPortfolioItem: Portfolio_state.selectedPortfolioItem,\n    portfolio: Portfolio_state.portfolio\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n  hydrateTimeSeriesDataThunk: (symbol) => dispatch(hydrateTimeSeriesDataThunk(symbol))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IndivPerf);","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nexport default function IndivSelector (props){\n\n  const { pathname } = props;\n\n  function isSelectedSelector(selector){\n\n    return pathname.includes(selector) ? \"selected\" : undefined ;\n  }\n\n  return (\n\n    <div onClick={props.exit}>\n\n      <Link to=\"/indiv/perf\">\n\n        <span className={isSelectedSelector(\"perf\")}>\n          Performance\n        </span>          \n      \n      </Link>\n\n      <Link to=\"/indiv/finan\">\n\n        <span className={isSelectedSelector(\"finan\")}>\n          Financials\n        </span>\n\n      </Link>\n\n      <Link to=\"/indiv/news\">\n      \n        <span className={isSelectedSelector(\"news\")}>\n          News\n        </span>\n      \n      </Link>\n\n      <Link to=\"/indiv/trans\">\n      \n        <span className={isSelectedSelector(\"trans\")}>\n          Transactions\n        </span>\n      \n      </Link>\n    </div>\n    \n  );\n};\n\n","import React from 'react';\nimport { connect } from \"react-redux\";\n\nclass IndivTrans extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  render() {\n\n    const { transactionHistory, selectedPortfolioItem } = this.props\n    \n    return (\n      <div className=\"indiv-trans indiv-container\">\n\n        <div>\n\n          <span>Type</span>\n          <span>Quantity</span>\n          <span>Price</span>\n          <span>Date</span>\n\n        </div>\n\n        <div>\n\n          { transactionHistory &&\n            Object.entries(transactionHistory)\n              .reverse()\n              .filter(item =>{       \n\n                return item[1].symbol === selectedPortfolioItem && item[1].quantity > 0\n              })\n              .map((item, i)=>{\n                \n                let date = item[1].date_conducted \n                date = date.slice(0,date.indexOf(\":\")-2)\n\n                return(\n\n                  <div key={i}>\n                    <span>{item[1].type}</span>\n                    <span>{item[1].quantity}</span>\n                    <span>${item[1].price}</span>\n                    <span>{date}</span>\n                  </div>\n                )\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = ({ Portfolio_state }) => {\n\n  return {\n    transactionHistory : Portfolio_state.transactionHistory,\n    selectedPortfolioItem: Portfolio_state.selectedPortfolioItem\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(IndivTrans);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { makeTradeThunk } from \"../../../store/Portfolio/thunks_for_Portfolio.js\"\n\nclass TradeBox extends React.Component {\n\n  constructor(props){\n      super(props)\n\n      this.state = {\n          size: 0,\n          isToolTipShowing: false,\n          tooltipMessage: ''\n      }\n  }\n\n  handleTrade = (type) =>{\n\n      const { portfolio, \n              selectedPortfolioItem, \n              makeTradeThunk,\n              balance } = this.props\n\n      const selectedPortfolioItem_object = portfolio[selectedPortfolioItem]\n\n      const { quantity, price, symbol } = selectedPortfolioItem_object\n\n      // validate the trade\n\n      if(type === \"Sell\" && (this.state.size > quantity) ) {\n\n          this.setState({\n              isToolTipShowing: true,\n              tooltipMessage: \"Insufficient holdings to cover trade.\"\n          })\n\n          setTimeout(()=>{\n              this.setState({isToolTipShowing: false})\n          }, 2000)\n\n          return\n      }\n      else if(type === \"Buy\" && ( (this.state.size * price) > balance) ){\n\n          this.setState({\n              isToolTipShowing: true,\n              tooltipMessage: \"Insufficient balance to cover trade.\"\n          })\n\n          setTimeout(()=>{\n              this.setState({isToolTipShowing: false})\n          }, 2000)\n\n          return\n      }\n      else{\n          \n          makeTradeThunk(symbol, this.state.size, type, price)\n          this.setState({size: 0})\n          this.props.exit()\n          return\n      }\n  }\n\n  render(){\n\n    return (\n\n      <div>\n\n            <span>\n              Quantity\n            </span>\n\n            <input \n              type=\"number\" \n              min=\"1\" \n              max=\"5\"\n              onChange={(e)=>this.setState({size: e.target.value})}\n            />\n            <div>\n\n              <button onClick={()=> this.handleTrade('Buy')}>\n                Buy\n              </button>\n              \n              <button onClick={()=> this.handleTrade('Sell')}>\n                Sell\n              </button>\n\n            </div>\n\n            { this.state.isToolTipShowing && <span>{this.state.tooltipMessage}</span>}\n      </div>\n\n    );\n  }\n};\n\nconst mapStateToProps = ({ User_state, Portfolio_state }) => {\n  return {\n    token: User_state.token,\n    portfolio: Portfolio_state.portfolio, \n    selectedPortfolioItem : Portfolio_state.selectedPortfolioItem,\n    balance: User_state.Balance\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  makeTradeThunk: (...args) => dispatch(makeTradeThunk(...args)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TradeBox);","import React from \"react\";\n\nconst LoadingDots = (props) => {\n\n    const style = {\n        display: \"inline\", \n        color: \"black\", \n        fontSize: props.size\n    }\n\n    return (\n        \n        <div className={\"loading-dots\"}>\n            <span style={style}>.</span>\n            <span style={style}>.</span>\n            <span style={style}>.</span>        \n        </div>\n    )\n}\n\nexport default LoadingDots\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport symbolHash from '../symbolHash.json'\nimport { makeTradeThunk } from \"../../../store/Portfolio/thunks_for_Portfolio.js\"\n\nclass AddSymbolBox extends React.Component {\n\n      constructor(props){\n          super(props)\n        \n          this.state = {\n            stockName: null,\n            input: null\n          }\n        }\n\n        validateSymbol = (text) => {\n\n          return !!symbolHash[text]\n        }\n\n        handleChange = (e) =>{\n\n          let text = e.target.value\n\n          this.setState({input: text })\n\n          if(this.validateSymbol(text)){\n\n            this.setState({\n                stockName: symbolHash[text]\n            })\n          }\n          else{\n\n            this.setState({\n\n              stockName: null\n            })\n          }\n        }\n\n        handleSubmit = () => {\n\n          const {stockName, input} = this.state\n\n          const {makeTradeThunk, exit} = this.props\n\n          if(stockName && !this.props.portfolio[input]){\n\n            makeTradeThunk( input, 0, \"Buy\", 0, true )\n          }\n\n          exit()\n        }\n  \n        render(){\n\n          const {stockName, input} = this.state\n\n          return (\n\n            <div className=\"trade-box symbol-box\" id=\"add-symbol-box\">\n\n              <span>\n                Symbol\n              </span>\n\n              <input \n                type=\"text\" \n                min=\"1\" \n                max=\"5\"\n                onChange={this.handleChange}\n              />\n              <div>\n\n                <button \n                  onClick={this.handleSubmit} \n                  style={{opacity: stockName && !this.props.portfolio[input] ? \"1\" : \".3\"}}\n                >\n                 Add\n                </button>\n\n              </div>\n\n              \n                <span> \n                  {this.state.stockName ? stockName : \" \"} \n                </span>\n              \n            </div>\n          );\n        }\n};\n\nconst mapStateToProps = ({ Portfolio_state, User_state }) => {\n  return {\n    token: User_state.token,\n    portfolio: Portfolio_state.portfolio,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n  makeTradeThunk: (...args) => dispatch(makeTradeThunk(...args)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddSymbolBox);","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nexport default class AllNav extends React.Component {\n \n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n\n    const { pathname } = this.props.location\n\n    return (\n\n      <div className=\"all-nav\">\n        \n        <Link to=\"/all/watchlist\">\n\n            <span className={pathname.includes(\"watchlist\") ? \"selected\" : undefined}>\n              Portfolio\n            </span>   \n        \n        </Link>\n        \n        <Link to=\"/all/transactions\">\n\n          <span className={pathname.includes(\"transactions\") ? \"selected\" : undefined}>\n              Transactions\n          </span>   \n  \n        </Link>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { connect } from \"react-redux\";\n\nclass AllTrans extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"all-trans\">\n\n        <span>Transaction History</span>\n\n        <div>\n\n          <span>Type</span>\n          <span>Symbol</span>\n          <span>Quantity</span>\n          <span>@Buy</span>\n          <span>Date</span>\n\n        </div>\n\n        <div>\n\n          {\n            Object.entries(this.props.transactionHistory)\n              .reverse()\n              .filter(item =>{                \n                \n                  return item[1].quantity > 0\n                })\n              .map((item, i)=>{\n                \n                // note- date is relative to GMT from server\n                // conversion \n                let date = item[1].date_conducted\n                                  .slice(0, item[1].date_conducted.indexOf(\"GMT\"))\n                                  .slice(0, item[1].date_conducted.indexOf(\":\")-2)\n\n                return(\n\n                  <div key={i}>\n                    <span>{item[1].type}</span>\n                    <span>{item[1].symbol} </span>\n                    <span>{item[1].quantity}</span>\n                    <span>${item[1].price.toFixed(2)}</span>\n                    <span>{date}</span>\n                  </div>\n                )\n            })\n          }\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ Portfolio_state }) => {\n\n  return {\n    transactionHistory : Portfolio_state.transactionHistory\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AllTrans);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { isDesktop } from '../utils'\nimport AddSymbolBox from \"./AddSymbolBox\"\nimport LoadingDots from '../loadingDots'\n\nclass AllWatchList extends React.Component {\n \n  constructor(props) {\n    super(props);\n\n      this.state = {\n\n          isModalShowing : false,\n          edit: false,\n          hideList: [],\n      }\n   }\n\n   componentDidMount(){\n\n      let LS_Key = `${this.props.email}-hideList`\n\n      let storedHideList = localStorage.getItem(LS_Key)\n\n      this.setState({\n\n        hideList: storedHideList ? JSON.parse( localStorage.getItem(LS_Key) ) : [] \n      })\n   }\n\n    closeModal = () => {\n\n      this.setState({ isModalShowing : false })\n    }\n\n    handleEdit = (item) =>{\n      \n      const { hideList } = this.state\n      let { symbol } = item[1]\n      let LS_Key = `${this.props.email}-hideList`\n      \n      let newHidelist \n\n      if(hideList.includes(symbol)){\n\n        newHidelist = hideList.filter(item => item !== symbol)\n      }\n      else{\n\n        newHidelist = [ ...this.state.hideList, item[1].symbol ]\n      }\n\n      localStorage.setItem(LS_Key, JSON.stringify(newHidelist))\n\n      this.setState({\n\n        hideList : newHidelist\n      })\n    }\n  \n    render() {\n\n      const { isModalShowing, edit } = this.state\n      const { portfolio, token_error } = this.props\n  \n      return (\n\n        <div>\n\n        <div className=\"all-watchlist\">\n        \n          <div>\n\n            <i \n              className={`fas fa-plus fa-plus-edit fa-${isDesktop() ? \"2\" : \"7\"}x`} \n              onClick={()=>this.setState({edit: false, isModalShowing: true})}\n            />\n          \n            <i \n              className={`fas fa-edit fa-${isDesktop() ? \"2\" : \"7\"}x`} \n              onClick={()=>this.setState({edit: !edit, isModalShowing: false})}            \n            />\n          \n          </div>\n\n          <span>Portfolio</span>\n          \n          <div>\n\n            {token_error && \n                <div> \n\n                  <span className=\"error_message\">Error validating account- please try signing in again.</span>\n                  <span className=\"error_message\">We apologize for the inconvenience</span>\n                </div>}\n\n            { portfolio ?\n\n              Object.entries(portfolio)\n                .sort()\n                .filter((item)=>{\n\n                    if(this.state.edit){\n\n                      return true\n                    }\n                    else{\n\n                      return !this.state.hideList.includes(item[1].symbol)\n                    }\n                })\n                .map((item, i)=>{\n\n                  const { data, symbol } = item[1]\n\n                  const { hideList } = this.state \n\n                  return(\n\n                  <div key={i} className=\"watchlist-item-container\">\n\n                      { this.state.edit && \n                        \n\n                        <i \n                          className={`fas fa-${ hideList.includes(symbol) ? \"plus\" : \"minus\"} fa-${isDesktop() ? \"2\" : \"7\"}x`} \n                          onClick={()=> this.handleEdit(item) }\n                        />\n                      \n                      }\n\n                    { data &&\n                      <div className=\"watchlist-item\" style={{opacity: hideList.includes(symbol) ? \".5\" : \"1\" }}>\n\n\n                          <div>\n\n                            <span style={{ color : data.latestPrice < item[1].price ? \"green\" : \"red\" }}> {item[1].symbol}</span>\n                          \n                            <span> {data.companyName}</span>\n                            \n                            ${ item[1].price ?\n                            <span style={{ color : data.latestPrice < item[1].price ? \"green\" : \"red\" }}> \n                               {item[1].price} \n                            </span>\n                            :\n                            <span style={{ color : data.latestPrice > data.open ? \"green\" : \"red\" }}> \n                              {data.latestPrice} \n                            </span>\n                            }\n                          </div>\n\n                        <div>\n                          <span>{data.change}</span>\n                          <span>{data.changePercent}%</span>\n                        </div>\n                      </div>\n                    }\n                  </div>\n                  )\n                }\n              )\n            : <LoadingDots size={\"10rem\"} />\n            }\n          </div>\n\n        </div>\n\n          {\n            isModalShowing && \n\n            <div className=\"modal-container\" onClick={()=>this.setState({isModalShowing: false})}>\n\n              <div onClick={ (e)=> e.stopPropagation()} >\n                \n                    <AddSymbolBox exit={this.closeModal}/>\n              </div>\n            </div>\n          }\n\n        </div>\n      );\n    };\n}\n\nconst mapStateToProps = ({ User_state, Portfolio_state }) => {\n\n  return {\n    email: User_state.email,\n    portfolio : Portfolio_state.portfolio,\n    token_error: Portfolio_state.token_error\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AllWatchList);","export const logoUrl = \"../assets/graphql_logo.png\"\n\nexport const blurb = 'Graff Exchange, a real-time stock portfolio application built with a full stack: React, Redux, Sass, Socket.io, Node.js, GraphQL, Redis, PostgreSQL, and AWS.'\n\nexport function isDesktop(){\n\n    return window.outerWidth > 1100;\n}\n\nexport function isCell(){\n\n    return window.outerWidth < 601;\n}\n\nexport function isTab(){\n\n    return !isCell && !isDesktop;\n}","export default {\n\tHYDRATEPORTFOLIO : 'HYDRATEPORTFOLIO',\n\tMAKETRADE : 'MAKETRADE',\n\tGETONEPRICE : 'GETONEPRICE',\n\tGETOPENINGPRICE : 'GETOPENINGPRICE',\n\tHANDLESOCKETMESSAGE : 'HANDLESOCKETMESSAGE',\n\tHANDLENEWS : 'HANDLENEWS',\n\tHANDLEFINANCIALS : 'HANDLEFINANCIALS',\n\tHANDLEHISTORICALPRICE : 'HANDLEHISTORICALPRICE',\n\tHANDLESYMBOLSELECT : 'HANDLESYMBOLSELECT',\n}","import actions from \"./action_constants_for_Portfolio\"\n\nconst hydratePortfolio = (payload) => {\n      \treturn {\n      \t\ttype: actions.HYDRATEPORTFOLIO,\n      \t\tpayload\n      \t}\n      }\n\nconst makeTrade = (payload) => {\n      \treturn {\n      \t\ttype: actions.MAKETRADE,\n      \t\tpayload\n      \t}\n      }\n\nconst getOnePrice = (payload) => {\n      \treturn {\n      \t\ttype: actions.GETONEPRICE,\n      \t\tpayload\n      \t}\n      }\n\nconst getOpeningPrice = (payload) => {\n      \treturn {\n      \t\ttype: actions.GETOPENINGPRICE,\n      \t\tpayload\n      \t}\n      }\n\nconst handleSocketMessage = (payload) => {\n      \treturn {\n      \t\ttype: actions.HANDLESOCKETMESSAGE,\n      \t\tpayload\n      \t}\n      }\n\nconst handleNews = (payload) => {\n      \treturn {\n      \t\ttype: actions.HANDLENEWS,\n      \t\tpayload\n      \t}\n      }\n\nconst handleFinancials = (payload) => {\n      \treturn {\n      \t\ttype: actions.HANDLEFINANCIALS,\n      \t\tpayload\n      \t}\n      }\n\nconst handleHistoricalPrice = (payload) => {\n      \treturn {\n      \t\ttype: actions.HANDLEHISTORICALPRICE,\n      \t\tpayload\n      \t}\n      }\n\nconst handleSymbolSelect = (payload) => {\n      \treturn {\n      \t\ttype: actions.HANDLESYMBOLSELECT,\n      \t\tpayload\n      \t}\n      }\n\nexport default {\n\thydratePortfolio,\n\tmakeTrade,\n\tgetOnePrice,\n\tgetOpeningPrice,\n\thandleSocketMessage,\n\thandleNews,\n\thandleFinancials,\n\thandleHistoricalPrice,\n\thandleSymbolSelect,\n}","import actions from \"./actions_for_Portfolio\"\nimport gql from 'graphql-tag'\nimport { client } from '../../app/main'\n\nexport const hydratePortfolioThunk = ( token ) => async dispatch => {\n \n  const query = gql`query hydrate_portfolio_query($token: String){\n                      hydrate_portfolio(token: $token){\n                        holdings {\n                          user_data{\n                            symbol\n                          }\n                          ohlc_data{\n                            companyName\n                            latestPrice \n                            change\n                            changePercent\n                            open \n                          }\n                        }\n                      }\n                    }`\n \n  let response\n\n  const variables = { token }\n\n    try {\n\n      let { data : { hydrate_portfolio } } = await client.query({ query, variables })\n      \n      response = hydrate_portfolio\n    }\n    catch(error){\n\n      // invalid token error \n      if(error.networkError){\n        \n        // the object return from Apollo\n        // is very nested\n        response = error.networkError.result.errors[0].message\n      }\n      else{\n\n        response = error \n      }\n    }\n\n  dispatch(actions.hydratePortfolio( response ))\n};\n\n// called by web version after log in \n\nexport const hydrateSinglePortfolioPage = ( selectedPortfolioItem ) => async dispatch => {\n\n  const symbol  = selectedPortfolioItem\n\n  const query = gql`query individual_stock_data_call($symbol:String){\n  \n    all_individual_stock_data(symbol: $symbol ){\n      \n      news{\n        title\n        date\n        text\n        image_url \n        news_url \n      }\n      quarterly_financials {\n        data\n      }\n      time_series {\n        date\n        open\n        high\n        low\n        close\n      }\n    }\n  }`\n\n  let variables = { symbol }\n\n  let news\n  let quarterly_financials \n  let historical \n\n  try {\n\n    let { data : {all_individual_stock_data} } = await client.query({ query, variables })\n      \n    news = all_individual_stock_data.news\n    quarterly_financials = JSON.parse(all_individual_stock_data.quarterly_financials.data)\n    historical = all_individual_stock_data.time_series\n  }\n  catch(error){\n\n    console.log(error)\n  }\n\n  dispatch(actions.handleNews({ symbol, news }))\n\n  dispatch(actions.handleFinancials({ symbol, quarterly_financials }))\n\n  dispatch(actions.handleHistoricalPrice({ symbol, historical }))\n\n}\n\nexport const makeTradeThunk = (symbol, quantity, type, price, isNewSymbol) => async dispatch => {\n  \n    // refactor this \n    const graphQL_string =  !isNewSymbol ? `mutation make_trade_mutation_call($input: make_transaction_input) {\n\n      make_trade_mutation(input: $input) {\n        \n        transaction_result {\n          \n          symbol\n          balance \n          new_holding\n          \n          transaction {\n\n            symbol \n            quantity\n            price \n            type\n            date_conducted\n          }\n        }\n      }\n    }` : `mutation make_trade_mutation_call($input: make_transaction_input) {\n\n      make_trade_mutation(input: $input) {\n\n        transaction_result {\n          symbol\n          balance \n          new_holding \n\n          transaction {\n            symbol \n            quantity\n            price \n            type\n            date_conducted\n          }\n        }\n\n        ohlc_data{\n          companyName\n          latestPrice\n          change\n          changePercent\n          open\n        }\n\n      }\n    \n    }`\n    \n    const mutation = gql`${graphQL_string}`\n\n    quantity = Number(quantity)\n\n    let variables = { input : { symbol, quantity, type, price } }\n\n    let response\n\n    try {\n\n      let { data : { make_trade_mutation } } = await client.mutate({ mutation, variables })\n      \n      response = make_trade_mutation\n    }\n    catch(error){\n\n      console.log(error)\n    }\n\n    let { transaction_result } = response \n\n    if(response.ohlc_data){\n\n      let { ohlc_data } = response\n\n      dispatch(actions.makeTrade({ transaction_result, ohlc_data })) \n    }\n    else{\n      \n      dispatch(actions.makeTrade({ transaction_result })) \n    }  \n};\n\nexport const hydrateNewsThunk = ( symbol ) => async dispatch =>{\n\n  const query = gql`query hydrate_news_query($symbol: String){\n  \n    hydrate_news(symbol: $symbol){\n      title\n      date\n      text\n      image_url\n      news_url\n    }\n  }`\n\n  const variables = { symbol }\n\n  let response\n\n  try {\n\n    let { data : {hydrate_news}} = await client.query({ query, variables })\n    \n    response = hydrate_news\n  }\n  catch(error){\n\n    console.log(error)\n  }\n\n  dispatch(actions.handleNews({news: response, symbol}))\n} \n\nexport const hydrateQuarterlyFinancialsThunk = ( symbol ) => async dispatch =>{\n\n  const query = gql`query hydrate_quarterly_financials_query($symbol: String){\n  \n    hydrate_quarterly_financials(symbol: $symbol){\n      data\n    }\n  }`\n\n  const variables = { symbol }\n\n  let response\n\n  try {\n\n    let { data : {hydrate_quarterly_financials}} = await client.query({ query, variables })\n    \n    response = hydrate_quarterly_financials\n  }\n  catch(error){\n\n    console.log(error)\n  }\n\n  dispatch(actions.handleFinancials({quarterly_financials: JSON.parse(response.data), symbol}))\n} \n\nexport const hydrateTimeSeriesDataThunk = ( symbol ) => async dispatch =>{\n\n  const query = gql`query hydrate_time_series_data_query($symbol: String){\n  \n    hydrate_time_series_data(symbol: $symbol){\n      date\n      open\n      high\n      low\n      close\n    }\n  }`\n\n  const variables = { symbol }\n\n  let response\n\n  try {\n\n    let { data : { hydrate_time_series_data }} = await client.query({ query, variables })\n    \n    response = hydrate_time_series_data\n  }\n  catch(error){\n\n    console.log(error)\n  }\n\n  dispatch(actions.handleHistoricalPrice({historical: response, symbol}))\n} \n\nexport default {\n\thydratePortfolioThunk,\n\tmakeTradeThunk,\n}\n","import actions from \"./action_constants_for_User\"\n\nconst login = (payload) => {\n      \treturn {\n      \t\ttype: actions.LOGIN,\n      \t\tpayload\n      \t}\n      }\n\nconst LogOut = (payload) => {\n      \treturn {\n      \t\ttype: actions.LOGOUT,\n      \t\tpayload\n      \t}\n      }\n\nexport default {\n\tlogin,\n\tLogOut,\n}","import { isCell } from '../../app/components/utils'\nimport actions from \"./actions_for_User\"\nimport { client } from '../../app/main'\nimport gql from 'graphql-tag'\n\nexport const loginThunk = (email, password) => async dispatch => {\n\n  const OHLC_data = `ohlc_data {\n                      latestPrice\n                      companyName\n                      change\n                      changePercent\n                      open\n                    }`\n\n  const full_query = `login(email: $email, password: $password){\n    email\n    first_name\n    last_name \n    token\n    balance\n    holdings {\n      user_data {\n        symbol\n        current_holding\n      }\n      ${ isCell() ? OHLC_data : ``}\n    }\n    transaction_history{\n      id\n      type\n      symbol\n      quantity\n      price\n      date_conducted\n    }\n  }\n  `  \n\n  const query = gql`query login_call($email: String, $password: String) {\n    ${full_query}\n  }`\n\n  let variables = { email, password }\n\n  let response\n\n  try {\n\n    let { data : { login } } = await client.query({ query, variables })\n    \n    response = login\n\n    localStorage.setItem(\"token\", response.token)\n  }\n  catch(error){\n\n    response = error \n\n    console.log(error)\n  }\n  \n  dispatch(actions.login(response))\n};\n\nexport const registerThunk = ( first_name, last_name, email, password ) => async dispatch => {\n  \n  const mutation = gql`mutation sign_up_call($input: sign_up_input) {\n\n    sign_up(input: $input){\n      email\n      first_name\n      last_name \n      token\n      balance\n      holdings {\n        user_data {\n          symbol\n          current_holding\n        }\n        ohlc_data {\n          latestPrice\n          companyName\n          change\n          changePercent\n          open\n        }\n      }\n      transaction_history{\n        id\n        type\n        symbol\n        quantity\n        price\n        date_conducted\n      }\n    }\n  }`\n\n  let variables = { input : { first_name, last_name, email, password } }\n\n  let response\n\n  try {\n\n    let { data : { sign_up } } = await client.mutate({ mutation, variables })\n    \n    response = sign_up\n  }\n  catch(error){\n\n    console.log(error)\n  }\n\n  localStorage.setItem(\"token\", response.token)\n  \n  dispatch(actions.login(response))\n};\n\nexport default {\n\tloginThunk,\n\tregisterThunk,\n}"],"sourceRoot":""}