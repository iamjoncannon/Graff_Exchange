{"version":3,"sources":["webpack:///./app/components/Footer.js","webpack:///./app/components/MainNav.js","webpack:///./app/components/app.js","webpack:///./app/components/indiv/IndivTrans.js","webpack:///./app/components/portfolio/AllNav.js","webpack:///./app/components/portfolio/AllTrans.js","webpack:///./app/components/utils.js","webpack:///./store/Portfolio/action_constants_for_Portfolio.js","webpack:///./store/Portfolio/actions_for_Portfolio.js","webpack:///./store/Portfolio/thunks_for_Portfolio.js","webpack:///./store/User/actions_for_User.js"],"names":["front_end_url","back_end_url","Footer","props","backgroundColor","borderRadius","logoUrl","MainNav","token","hydratePortfolio","pathname","location","isDesktop","Name","Number","Balance","toFixed","LogOut","includes","Object","keys","portfolio","length","React","Component","mapStateToProps","User_state","Portfolio_state","balance","mapDispatchToProps","dispatch","UserActions","hydratePortfolioThunk","connect","App","Landing","isLoggedIn","IndivNav","IndivPerf","IndivFin","IndivNews","IndivTrans","AllNav","AllWatchlist","AllTrans","withRouter","state","transactionHistory","selectedPortfolioItem","entries","reverse","filter","item","symbol","quantity","map","i","date","date_conducted","slice","indexOf","type","price","undefined","blurb","window","outerWidth","isCell","isTab"],"mappings":"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","file":"./modules/0.99b2cc13d5597d2bdfb9.js","sourcesContent":["import React from \"react\";\nimport { logoUrl } from \"./utils\"\n\nconst front_end_url = \"https://github.com/iamjoncannon/Graff_Exchange\"\nconst back_end_url = \"https://github.com/iamjoncannon/Graff_Exchange_API\"\n\nconst Footer = (props) => {\n\n    return (\n\n        <footer>\n                <a href={front_end_url} target=\"_blank\"> \n                    <img src=\"https://jayceecodesphotos.s3.amazonaws.com/react.png\" /> \n                </a>\n                \n                <a href={front_end_url} target=\"_blank\"> \n                \n                    <img src=\"https://jayceecodesphotos.s3.amazonaws.com/redux.png\" />\n                </a>\n\n                <a href={front_end_url} target=\"_blank\"> \n\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/96/Sass_Logo_Color.svg/2000px-Sass_Logo_Color.svg.png\" style={{backgroundColor: \"white\", borderRadius: \"10px\"}}/>\n                </a>\n\n                <a href={back_end_url} target=\"_blank\"> \n\n                    <img src={logoUrl} />\n                </a>\n                \n                <a href={back_end_url} target=\"_blank\"> \n\n                    <img src={\"http://pluspng.com/img-png/nodejs-logo-png-nice-images-collection-node-js-desktop-wallpapers-370.png\"} />\n                </a>\n\n                <a href={back_end_url} target=\"_blank\"> \n\n                    <img src=\"https://cdn.iconscout.com/icon/free/png-512/redis-6-1175105.png\" />\n                </a>\n\n                <a href={back_end_url} target=\"_blank\"> \n                    <img src=\"https://jayceecodesphotos.s3.amazonaws.com/postgres.png\" />\n                </a>\n                \n                <a href={back_end_url} target=\"_blank\"> \n\n                    <img src=\"https://jayceecodesphotos.s3.amazonaws.com/aws.png\" style={{borderRadius: \"10px\"}}/>\n                </a>\n\n        </footer>\n    )\n}\n\nexport default Footer","import React, { Suspense, lazy } from 'react';\nimport { connect } from \"react-redux\";\nimport { logoUrl } from './utils'\nimport { Link } from 'react-router-dom'\nimport Socket from './Socket'\nimport { isDesktop } from './utils'\nimport { hydratePortfolioThunk } from \"../../store/Portfolio/thunks_for_Portfolio.js\"\nimport UserActions from \"../../store/User/actions_for_User.js\"\n\n// since the main nav gets mounted \n// when the user logs in, and its mounted\n// through the application workflow, it will\n// be used to retrieve initial data and will\n// host the socket\n\nclass MainNav extends React.Component {\n \n  constructor(props){\n      super(props)\n\n  } \n\n  componentDidMount(){\n\n    const { token, hydratePortfolio } = this.props\n    \n    hydratePortfolio(token)\n  }\n\n  render(){\n\n    const { pathname } = this.props.location;\n\n    return (\n\n      <div className=\"main-nav\">\n\n            <Socket />\n\n        { isDesktop && \n    \n          <div className=\"desk-nav\">\n              <span>Graff Exchange</span>\n              {/* <span>Account</span> */}\n              <span>{this.props.Name}</span>\n              <span>Balance: ${Number(this.props.Balance).toFixed(2)}</span>\n              <span onClick={this.props.LogOut}>Log Out</span>\n          </div> \n        }\n\n        <div className=\"all-screens\">\n          \n          <Link to=\"/all/watchlist\">\n\n            <i className={`fas fa-home fa-${isDesktop ? \"2\" : \"7\"}x ${ pathname.includes(\"/all\") ? \"selected\" : \"\"}`} />\n\n            {isDesktop() && <span>Portfolio</span>}\n          \n          </Link>\n\n          <img src={logoUrl} />\n          \n    \n            <Link to={ Object.keys(this.props.portfolio).length > 0 ? \"/indiv/perf\" : \"/all/watchlist\"}>\n\n              {isDesktop() && <span>Holdings</span>}   \n\n              <i className={`fas fa-chart-bar fa-${isDesktop ? \"2\" : \"7\"}x ${ pathname.includes(\"/indiv\") ? \"selected\" : \"\"}`} />\n            \n            </Link>\n \n\n        </div>\n\n      </div>\n\n    );\n  }\n\n};\n\nconst mapStateToProps = ({ User_state, Portfolio_state }) => {\n  \n  return {\n    Name: User_state.Name,\n    Balance: User_state.balance,\n    token: User_state.token,\n    portfolio: Portfolio_state.portfolio\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  LogOut : () => dispatch(UserActions.LogOut()),\n  hydratePortfolio: (token) => dispatch(hydratePortfolioThunk(token)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainNav);","import React from 'react';\nimport { Route, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from \"react-redux\";\n\nimport Landing from './Landing'\nimport Footer from './Footer'\nimport MainNav from './MainNav'\n\nimport IndivNav from './indiv/IndivNav'\nimport IndivPerf from './indiv/IndivPerf'\nimport IndivFin from './indiv/IndivFin'\nimport IndivNews from './indiv/IndivNews'\nimport IndivTrans from './indiv/IndivTrans'\n\nimport AllNav from './portfolio/AllNav'\nimport AllWatchlist from './portfolio/AllWatchlist'\nimport AllTrans from './portfolio/AllTrans'\n\nconst App = (props) => {\n\n  // login route\n\n  if(props.location.pathname === \"/\"){\n\n    return (\n\n      <div className=\"app-container\">\n  \n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/\" component={Footer} />\n\n      </div>\n\n    )\n  }\n  else{\n \n    // trying to hit logged in route \n    // but not logged in \n\n    if(!props.isLoggedIn){\n      \n      return(\n        \n        <Redirect to=\"/\" />\n      ) \n    }\n    else{\n      \n      // logged in routes\n      \n        return (\n          \n          <div className=\"app-container\">\n                  \n            <Route path=\"/\" component={MainNav} />\n\n            <Route path=\"/indiv\" component={IndivNav} />\n            <Route exact path=\"/indiv/perf\" component={IndivPerf} />\n            <Route exact path=\"/indiv/finan\" component={IndivFin} />\n            <Route exact path=\"/indiv/news\" component={IndivNews} />\n            <Route exact path=\"/indiv/trans\" component={IndivTrans} />\n            \n            <Route path=\"/all\" component={AllNav} />\n            <Route exact path=\"/all/watchlist\" component={AllWatchlist} />\n            <Route exact path=\"/all/transactions\" component={AllTrans} />\n\n        </div>\n      )\n    }\n  }\n};\n\nconst mapStateToProps = ({ User_state }) => {\n  return {\n      isLoggedIn : User_state.isLoggedIn\n  };\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  null\n)(App))\n","import React from 'react';\nimport { connect } from \"react-redux\";\n\nclass IndivTrans extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  render() {\n\n    const { transactionHistory, selectedPortfolioItem } = this.props\n    \n    return (\n      <div className=\"indiv-trans indiv-container\">\n\n        <div>\n\n          <span>Type</span>\n          <span>Quantity</span>\n          <span>Price</span>\n          <span>Date</span>\n\n        </div>\n\n        <div>\n\n          { transactionHistory &&\n            Object.entries(transactionHistory)\n              .reverse()\n              .filter(item =>{       \n\n                return item[1].symbol === selectedPortfolioItem && item[1].quantity > 0\n              })\n              .map((item, i)=>{\n                \n                let date = item[1].date_conducted \n                date = date.slice(0,date.indexOf(\":\")-2)\n\n                return(\n\n                  <div key={i}>\n                    <span>{item[1].type}</span>\n                    <span>{item[1].quantity}</span>\n                    <span>${item[1].price}</span>\n                    <span>{date}</span>\n                  </div>\n                )\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = ({ Portfolio_state }) => {\n\n  return {\n    transactionHistory : Portfolio_state.transactionHistory,\n    selectedPortfolioItem: Portfolio_state.selectedPortfolioItem\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(IndivTrans);\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nexport default class AllNav extends React.Component {\n \n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n\n    const { pathname } = this.props.location\n\n    return (\n\n      <div className=\"all-nav\">\n        \n        <Link to=\"/all/watchlist\">\n\n            <span className={pathname.includes(\"watchlist\") ? \"selected\" : undefined}>\n              Portfolio\n            </span>   \n        \n        </Link>\n        \n        <Link to=\"/all/transactions\">\n\n          <span className={pathname.includes(\"transactions\") ? \"selected\" : undefined}>\n              Transactions\n          </span>   \n  \n        </Link>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { connect } from \"react-redux\";\n\nclass AllTrans extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"all-trans\">\n\n        <span>Transaction History</span>\n\n        <div>\n\n          <span>Type</span>\n          <span>Symbol</span>\n          <span>Quantity</span>\n          <span>@Buy</span>\n          <span>Date</span>\n\n        </div>\n\n        <div>\n\n          {\n            Object.entries(this.props.transactionHistory)\n              .reverse()\n              .filter(item =>{                \n                \n                  return item[1].quantity > 0\n                })\n              .map((item, i)=>{\n                \n                // note- date is relative to GMT from server\n                // conversion \n                let date = item[1].date_conducted\n                                  .slice(0, item[1].date_conducted.indexOf(\"GMT\"))\n                                  .slice(0, item[1].date_conducted.indexOf(\":\")-2)\n\n                return(\n\n                  <div key={i}>\n                    <span>{item[1].type}</span>\n                    <span>{item[1].symbol} </span>\n                    <span>{item[1].quantity}</span>\n                    <span>${item[1].price.toFixed(2)}</span>\n                    <span>{date}</span>\n                  </div>\n                )\n            })\n          }\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ Portfolio_state }) => {\n\n  return {\n    transactionHistory : Portfolio_state.transactionHistory\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AllTrans);\n","export const logoUrl = \"../assets/graphql_logo.png\"\n\nexport const blurb = 'Graff Exchange, a real-time stock portfolio application built with a full stack: React, Redux, Sass, Socket.io, Node.js, GraphQL, Redis, PostgreSQL, and AWS.'\n\nexport function isDesktop(){\n\n    return window.outerWidth > 1100;\n}\n\nexport function isCell(){\n\n    return window.outerWidth < 601;\n}\n\nexport function isTab(){\n\n    return !isCell && !isDesktop;\n}","export default {\n\tHYDRATEPORTFOLIO : 'HYDRATEPORTFOLIO',\n\tMAKETRADE : 'MAKETRADE',\n\tGETONEPRICE : 'GETONEPRICE',\n\tGETOPENINGPRICE : 'GETOPENINGPRICE',\n\tHANDLESOCKETMESSAGE : 'HANDLESOCKETMESSAGE',\n\tHANDLENEWS : 'HANDLENEWS',\n\tHANDLEFINANCIALS : 'HANDLEFINANCIALS',\n\tHANDLEHISTORICALPRICE : 'HANDLEHISTORICALPRICE',\n\tHANDLESYMBOLSELECT : 'HANDLESYMBOLSELECT',\n}","import actions from \"./action_constants_for_Portfolio\"\n\nconst hydratePortfolio = (payload) => {\n      \treturn {\n      \t\ttype: actions.HYDRATEPORTFOLIO,\n      \t\tpayload\n      \t}\n      }\n\nconst makeTrade = (payload) => {\n      \treturn {\n      \t\ttype: actions.MAKETRADE,\n      \t\tpayload\n      \t}\n      }\n\nconst getOnePrice = (payload) => {\n      \treturn {\n      \t\ttype: actions.GETONEPRICE,\n      \t\tpayload\n      \t}\n      }\n\nconst getOpeningPrice = (payload) => {\n      \treturn {\n      \t\ttype: actions.GETOPENINGPRICE,\n      \t\tpayload\n      \t}\n      }\n\nconst handleSocketMessage = (payload) => {\n      \treturn {\n      \t\ttype: actions.HANDLESOCKETMESSAGE,\n      \t\tpayload\n      \t}\n      }\n\nconst handleNews = (payload) => {\n      \treturn {\n      \t\ttype: actions.HANDLENEWS,\n      \t\tpayload\n      \t}\n      }\n\nconst handleFinancials = (payload) => {\n      \treturn {\n      \t\ttype: actions.HANDLEFINANCIALS,\n      \t\tpayload\n      \t}\n      }\n\nconst handleHistoricalPrice = (payload) => {\n      \treturn {\n      \t\ttype: actions.HANDLEHISTORICALPRICE,\n      \t\tpayload\n      \t}\n      }\n\nconst handleSymbolSelect = (payload) => {\n      \treturn {\n      \t\ttype: actions.HANDLESYMBOLSELECT,\n      \t\tpayload\n      \t}\n      }\n\nexport default {\n\thydratePortfolio,\n\tmakeTrade,\n\tgetOnePrice,\n\tgetOpeningPrice,\n\thandleSocketMessage,\n\thandleNews,\n\thandleFinancials,\n\thandleHistoricalPrice,\n\thandleSymbolSelect,\n}","import actions from \"./actions_for_Portfolio\"\nimport gql from 'graphql-tag'\nimport { client } from '../../app/main'\n\nexport const hydratePortfolioThunk = ( token ) => async dispatch => {\n \n  const query = gql`query hydrate_portfolio_query($token: String){\n                      hydrate_portfolio(token: $token){\n                        holdings {\n                          user_data{\n                            symbol\n                          }\n                          ohlc_data{\n                            companyName\n                            latestPrice \n                            change\n                            changePercent\n                            open \n                          }\n                        }\n                      }\n                    }`\n \n  let response\n\n  const variables = { token }\n\n    try {\n\n      let { data : { hydrate_portfolio } } = await client.query({ query, variables })\n      \n      response = hydrate_portfolio\n    }\n    catch(error){\n\n      // invalid token error \n      if(error.networkError){\n        \n        // the object return from Apollo\n        // is very nested\n        response = error.networkError.result.errors[0].message\n      }\n      else{\n\n        response = error \n      }\n    }\n\n  dispatch(actions.hydratePortfolio( response ))\n};\n\n// called by web version after log in \n\nexport const hydrateSinglePortfolioPage = ( selectedPortfolioItem ) => async dispatch => {\n\n  const symbol  = selectedPortfolioItem\n\n  const query = gql`query individual_stock_data_call($symbol:String){\n  \n    all_individual_stock_data(symbol: $symbol ){\n      \n      news{\n        title\n        date\n        text\n        image_url \n        news_url \n      }\n      quarterly_financials {\n        data\n      }\n      time_series {\n        date\n        open\n        high\n        low\n        close\n      }\n    }\n  }`\n\n  let variables = { symbol }\n\n  let news\n  let quarterly_financials \n  let historical \n\n  try {\n\n    let { data : {all_individual_stock_data} } = await client.query({ query, variables })\n      \n    news = all_individual_stock_data.news\n    quarterly_financials = JSON.parse(all_individual_stock_data.quarterly_financials.data)\n    historical = all_individual_stock_data.time_series\n  }\n  catch(error){\n\n    console.log(error)\n  }\n\n  dispatch(actions.handleNews({ symbol, news }))\n\n  dispatch(actions.handleFinancials({ symbol, quarterly_financials }))\n\n  dispatch(actions.handleHistoricalPrice({ symbol, historical }))\n\n}\n\nexport const makeTradeThunk = (symbol, quantity, type, price, isNewSymbol) => async dispatch => {\n  \n    // refactor this \n    const graphQL_string =  !isNewSymbol ? `mutation make_trade_mutation_call($input: make_transaction_input) {\n\n      make_trade_mutation(input: $input) {\n        \n        transaction_result {\n          \n          symbol\n          balance \n          new_holding\n          \n          transaction {\n\n            symbol \n            quantity\n            price \n            type\n            date_conducted\n          }\n        }\n      }\n    }` : `mutation make_trade_mutation_call($input: make_transaction_input) {\n\n      make_trade_mutation(input: $input) {\n\n        transaction_result {\n          symbol\n          balance \n          new_holding \n\n          transaction {\n            symbol \n            quantity\n            price \n            type\n            date_conducted\n          }\n        }\n\n        ohlc_data{\n          companyName\n          latestPrice\n          change\n          changePercent\n          open\n        }\n\n      }\n    \n    }`\n    \n    const mutation = gql`${graphQL_string}`\n\n    quantity = Number(quantity)\n\n    let variables = { input : { symbol, quantity, type, price } }\n\n    let response\n\n    try {\n\n      let { data : { make_trade_mutation } } = await client.mutate({ mutation, variables })\n      \n      response = make_trade_mutation\n    }\n    catch(error){\n\n      console.log(error)\n    }\n\n    let { transaction_result } = response \n\n    if(response.ohlc_data){\n\n      let { ohlc_data } = response\n\n      dispatch(actions.makeTrade({ transaction_result, ohlc_data })) \n    }\n    else{\n      \n      dispatch(actions.makeTrade({ transaction_result })) \n    }  \n};\n\nexport const hydrateNewsThunk = ( symbol ) => async dispatch =>{\n\n  const query = gql`query hydrate_news_query($symbol: String){\n  \n    hydrate_news(symbol: $symbol){\n      title\n      date\n      text\n      image_url\n      news_url\n    }\n  }`\n\n  const variables = { symbol }\n\n  let response\n\n  try {\n\n    let { data : {hydrate_news}} = await client.query({ query, variables })\n    \n    response = hydrate_news\n  }\n  catch(error){\n\n    console.log(error)\n  }\n\n  dispatch(actions.handleNews({news: response, symbol}))\n} \n\nexport const hydrateQuarterlyFinancialsThunk = ( symbol ) => async dispatch =>{\n\n  const query = gql`query hydrate_quarterly_financials_query($symbol: String){\n  \n    hydrate_quarterly_financials(symbol: $symbol){\n      data\n    }\n  }`\n\n  const variables = { symbol }\n\n  let response\n\n  try {\n\n    let { data : {hydrate_quarterly_financials}} = await client.query({ query, variables })\n    \n    response = hydrate_quarterly_financials\n  }\n  catch(error){\n\n    console.log(error)\n  }\n\n  dispatch(actions.handleFinancials({quarterly_financials: JSON.parse(response.data), symbol}))\n} \n\nexport const hydrateTimeSeriesDataThunk = ( symbol ) => async dispatch =>{\n\n  const query = gql`query hydrate_time_series_data_query($symbol: String){\n  \n    hydrate_time_series_data(symbol: $symbol){\n      date\n      open\n      high\n      low\n      close\n    }\n  }`\n\n  const variables = { symbol }\n\n  let response\n\n  try {\n\n    let { data : { hydrate_time_series_data }} = await client.query({ query, variables })\n    \n    response = hydrate_time_series_data\n  }\n  catch(error){\n\n    console.log(error)\n  }\n\n  dispatch(actions.handleHistoricalPrice({historical: response, symbol}))\n} \n\nexport default {\n\thydratePortfolioThunk,\n\tmakeTradeThunk,\n}\n","import actions from \"./action_constants_for_User\"\n\nconst login = (payload) => {\n      \treturn {\n      \t\ttype: actions.LOGIN,\n      \t\tpayload\n      \t}\n      }\n\nconst LogOut = (payload) => {\n      \treturn {\n      \t\ttype: actions.LOGOUT,\n      \t\tpayload\n      \t}\n      }\n\nexport default {\n\tlogin,\n\tLogOut,\n}"],"sourceRoot":""}